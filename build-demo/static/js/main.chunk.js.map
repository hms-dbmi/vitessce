{"version":3,"file":"static/js/main.chunk.js","sources":["/Users/chuck/github/hubmap/vitessce/src/assets/sets/complement.svg","/Users/chuck/github/hubmap/vitessce/src/assets/sets/intersection.svg","/Users/chuck/github/hubmap/vitessce/src/assets/sets/union.svg","/Users/chuck/github/hubmap/vitessce/src/assets/tools/eye.svg","/Users/chuck/github/hubmap/vitessce/src/assets/tools/near_me.svg","/Users/chuck/github/hubmap/vitessce/src/assets/tools/pen.svg","/Users/chuck/github/hubmap/vitessce/src/assets/tools/selection_lasso.svg","/Users/chuck/github/hubmap/vitessce/src/assets/tools/selection_rectangle.svg","/Users/chuck/github/hubmap/vitessce/src/assets/tools/trash.svg","/Users/chuck/github/hubmap/vitessce/node_modules/moment/locale sync /^/.//.*$","/Users/chuck/github/hubmap/vitessce/src/app/PubSubVitessceGrid.js","/Users/chuck/github/hubmap/vitessce/src/app/Welcome.js","/Users/chuck/github/hubmap/vitessce/src/app/api.js","/Users/chuck/github/hubmap/vitessce/src/app/app.js","/Users/chuck/github/hubmap/vitessce/src/app/componentRegistry.js","/Users/chuck/github/hubmap/vitessce/src/components/AbstractSelectableComponent.js","/Users/chuck/github/hubmap/vitessce/src/components/ClosePaneButton.js","/Users/chuck/github/hubmap/vitessce/src/components/TitleInfo.js","/Users/chuck/github/hubmap/vitessce/src/components/ToolMenu.js","/Users/chuck/github/hubmap/vitessce/src/components/cell-tooltip/CellTooltip1DVertical.js","/Users/chuck/github/hubmap/vitessce/src/components/cell-tooltip/CellTooltip1DVerticalSubscriber.js","/Users/chuck/github/hubmap/vitessce/src/components/cell-tooltip/CellTooltip2D.js","/Users/chuck/github/hubmap/vitessce/src/components/cell-tooltip/CellTooltip2DSubscriber.js","/Users/chuck/github/hubmap/vitessce/src/components/cell-tooltip/CellTooltipText.js","/Users/chuck/github/hubmap/vitessce/src/components/channels/ChannelsSubscriber.js","/Users/chuck/github/hubmap/vitessce/src/components/classNames.js","/Users/chuck/github/hubmap/vitessce/src/components/factors/Factors.js","/Users/chuck/github/hubmap/vitessce/src/components/factors/FactorsSubscriber.js","/Users/chuck/github/hubmap/vitessce/src/components/genes/Genes.js","/Users/chuck/github/hubmap/vitessce/src/components/genes/GenesSubscriber.js","/Users/chuck/github/hubmap/vitessce/src/components/heatmap/Heatmap.js","/Users/chuck/github/hubmap/vitessce/src/components/heatmap/HeatmapCellColorCanvas.js","/Users/chuck/github/hubmap/vitessce/src/components/heatmap/HeatmapCellSelectionCanvas.js","/Users/chuck/github/hubmap/vitessce/src/components/heatmap/HeatmapDataCanvas.js","/Users/chuck/github/hubmap/vitessce/src/components/heatmap/HeatmapSubscriber.js","/Users/chuck/github/hubmap/vitessce/src/components/heatmap/HoverableHeatmapSubscriber.js","/Users/chuck/github/hubmap/vitessce/src/components/heatmap/utils.js","/Users/chuck/github/hubmap/vitessce/src/components/scatterplot/HoverableScatterplotSubscriber.js","/Users/chuck/github/hubmap/vitessce/src/components/scatterplot/Scatterplot.js","/Users/chuck/github/hubmap/vitessce/src/components/scatterplot/ScatterplotSubscriber.js","/Users/chuck/github/hubmap/vitessce/src/components/selectable-table/SelectableTable.js","/Users/chuck/github/hubmap/vitessce/src/components/selectable-table/index.js","/Users/chuck/github/hubmap/vitessce/src/components/sets/CellSetsManagerSubscriber.js","/Users/chuck/github/hubmap/vitessce/src/components/sets/Popover.js","/Users/chuck/github/hubmap/vitessce/src/components/sets/PopoverColor.js","/Users/chuck/github/hubmap/vitessce/src/components/sets/PopoverMenu.js","/Users/chuck/github/hubmap/vitessce/src/components/sets/SetsManager.js","/Users/chuck/github/hubmap/vitessce/src/components/sets/SetsManagerActionBar.js","/Users/chuck/github/hubmap/vitessce/src/components/sets/SetsManagerTab.js","/Users/chuck/github/hubmap/vitessce/src/components/sets/TreeNode.js","/Users/chuck/github/hubmap/vitessce/src/components/sets/io.js","/Users/chuck/github/hubmap/vitessce/src/components/sets/sets.js","/Users/chuck/github/hubmap/vitessce/src/components/sets/utils.js","/Users/chuck/github/hubmap/vitessce/src/components/sourcepublisher/SourcePublisher.js","/Users/chuck/github/hubmap/vitessce/src/components/sourcepublisher/index.js","/Users/chuck/github/hubmap/vitessce/src/components/spatial/HoverableSpatialSubscriber.js","/Users/chuck/github/hubmap/vitessce/src/components/spatial/LayersMenu.js","/Users/chuck/github/hubmap/vitessce/src/components/spatial/Spatial.js","/Users/chuck/github/hubmap/vitessce/src/components/spatial/SpatialSubscriber.js","/Users/chuck/github/hubmap/vitessce/src/components/status/Status.js","/Users/chuck/github/hubmap/vitessce/src/components/status/StatusSubscriber.js","/Users/chuck/github/hubmap/vitessce/src/components/utils.js","/Users/chuck/github/hubmap/vitessce/src/css/index.scss","/Users/chuck/github/hubmap/vitessce/src/demo/index.js","/Users/chuck/github/hubmap/vitessce/src/events.js","/Users/chuck/github/hubmap/vitessce/src/layers/SelectablePolygonLayer.js","/Users/chuck/github/hubmap/vitessce/src/layers/SelectableScatterplotLayer.js","/Users/chuck/github/hubmap/vitessce/src/layers/SelectionLayer.js","/Users/chuck/github/hubmap/vitessce/src/layers/index.js","/Users/chuck/github/hubmap/vitessce/src/layers/utils.js","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@deck.gl/core/node_modules/@loaders.gl/loader-utils/dist/esm/lib/library-utils ./require-utils.node","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@deck.gl/layers/node_modules/@loaders.gl/core/dist/esm/javascript-utils ../node/utils/to-array-buffer.node","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@deck.gl/geo-layers/node_modules/@loaders.gl/loader-utils/dist/esm/lib/library-utils ./require-utils.node","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@deck.gl/geo-layers/node_modules/@loaders.gl/core/dist/esm/lib/node/read-file-sync.node","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@deck.gl/geo-layers/node_modules/@loaders.gl/core/dist/esm/lib/node/write-file.node","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@deck.gl/geo-layers/node_modules/@loaders.gl/core/dist/esm/javascript-utils ../node/utils/to-array-buffer.node","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@loaders.gl/tiles/node_modules/@loaders.gl/loader-utils/dist/esm/lib/library-utils ./require-utils.node","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@loaders.gl/tiles/node_modules/@loaders.gl/core/dist/esm/lib/node/read-file-sync.node","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@loaders.gl/tiles/node_modules/@loaders.gl/core/dist/esm/lib/node/write-file.node","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@loaders.gl/tiles/node_modules/@loaders.gl/core/dist/esm/javascript-utils ../node/utils/to-array-buffer.node","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@loaders.gl/terrain/node_modules/@loaders.gl/loader-utils/dist/esm/lib/library-utils ./require-utils.node","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@deck.gl/core/node_modules/@loaders.gl/core/dist/esm/lib/node/read-file-sync.node","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/global min-document","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@deck.gl/core/node_modules/@loaders.gl/core/dist/esm/lib/node/write-file.node","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@deck.gl/core/node_modules/@loaders.gl/core/dist/esm/javascript-utils ../node/utils/to-array-buffer.node","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@loaders.gl/images/node_modules/@loaders.gl/loader-utils/dist/esm/lib/library-utils ./require-utils.node","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/probe.gl/dist/esm/lib asciify-image","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@deck.gl/layers/node_modules/@loaders.gl/loader-utils/dist/esm/lib/library-utils ./require-utils.node","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@deck.gl/layers/node_modules/@loaders.gl/core/dist/esm/lib/node/read-file-sync.node","/Users/chuck/github/hubmap/vitessce/ignored /Users/chuck/github/hubmap/vitessce/node_modules/@deck.gl/layers/node_modules/@loaders.gl/core/dist/esm/lib/node/write-file.node"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", {\n  id: \"MathJax_SVG_glyphs\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 1,\n  id: \"MJMATHI-78\",\n  d: \"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 1,\n  id: \"MJMAIN-3D\",\n  d: \"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 1,\n  id: \"MJMAIN-73\",\n  d: \"M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 1,\n  id: \"MJMAIN-69\",\n  d: \"M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 1,\n  id: \"MJMAIN-6E\",\n  d: \"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 1,\n  id: \"MJMATHI-3C0\",\n  d: \"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 1,\n  id: \"MJMAIN-222A\",\n  d: \"M591 598H592Q604 598 611 583V376Q611 345 611 296Q610 162 606 148Q605 146 605 145Q586 68 507 23T333 -22Q268 -22 209 -1T106 66T56 173Q55 180 55 384L56 585Q66 598 75 598Q85 598 95 585V378L96 172L98 162Q112 95 181 57T332 18Q415 18 487 58T570 175Q571 180 571 383V583Q579 598 591 598Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 1,\n  id: \"MJMAIN-2229\",\n  d: \"M88 -21T75 -21T55 -7V200Q55 231 55 280Q56 414 60 428Q61 430 61 431Q77 500 152 549T332 598Q443 598 522 544T610 405Q611 399 611 194V-7Q604 -22 591 -22Q582 -22 572 -9L570 405Q563 433 556 449T529 485Q498 519 445 538T334 558Q251 558 179 518T96 401Q95 396 95 193V-7Q88 -21 75 -21Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 1,\n  id: \"MJMAIN-21\",\n  d: \"M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  stroke: \"currentColor\",\n  fill: \"currentColor\",\n  strokeWidth: 0,\n  transform: \"matrix(1 0 0 -1 0 0)\"\n}, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#MJMAIN-21\",\n  x: 0,\n  y: 0\n}));\n\nfunction SvgComplement(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"0.647ex\",\n    height: \"1.985ex\",\n    style: {\n      verticalAlign: \"-0.128ex\"\n    },\n    viewBox: \"0 -799.3 278.5 854.5\",\n    role: \"img\",\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgComplement, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/complement.7c371228.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", {\n  id: \"MathJax_SVG_glyphs\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 30,\n  id: \"MJMATHI-78\",\n  d: \"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 30,\n  id: \"MJMAIN-3D\",\n  d: \"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 30,\n  id: \"MJMAIN-73\",\n  d: \"M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 30,\n  id: \"MJMAIN-69\",\n  d: \"M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 30,\n  id: \"MJMAIN-6E\",\n  d: \"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 30,\n  id: \"MJMATHI-3C0\",\n  d: \"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 30,\n  id: \"MJMAIN-222A\",\n  d: \"M591 598H592Q604 598 611 583V376Q611 345 611 296Q610 162 606 148Q605 146 605 145Q586 68 507 23T333 -22Q268 -22 209 -1T106 66T56 173Q55 180 55 384L56 585Q66 598 75 598Q85 598 95 585V378L96 172L98 162Q112 95 181 57T332 18Q415 18 487 58T570 175Q571 180 571 383V583Q579 598 591 598Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 30,\n  id: \"MJMAIN-2229\",\n  d: \"M88 -21T75 -21T55 -7V200Q55 231 55 280Q56 414 60 428Q61 430 61 431Q77 500 152 549T332 598Q443 598 522 544T610 405Q611 399 611 194V-7Q604 -22 591 -22Q582 -22 572 -9L570 405Q563 433 556 449T529 485Q498 519 445 538T334 558Q251 558 179 518T96 401Q95 396 95 193V-7Q88 -21 75 -21Z\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  stroke: \"currentColor\",\n  fill: \"currentColor\",\n  strokeWidth: 0,\n  transform: \"matrix(1 0 0 -1 0 0)\"\n}, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#MJMAIN-2229\",\n  x: 0,\n  y: 0\n}));\n\nfunction SvgIntersection(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"1.55ex\",\n    height: \"1.861ex\",\n    style: {\n      verticalAlign: \"-0.252ex\"\n    },\n    viewBox: \"0 -693 667.5 801.3\",\n    role: \"img\",\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgIntersection, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/intersection.40378fbf.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", {\n  id: \"MathJax_SVG_glyphs\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 30,\n  id: \"MJMATHI-78\",\n  d: \"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 30,\n  id: \"MJMAIN-3D\",\n  d: \"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 30,\n  id: \"MJMAIN-73\",\n  d: \"M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 30,\n  id: \"MJMAIN-69\",\n  d: \"M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 30,\n  id: \"MJMAIN-6E\",\n  d: \"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 30,\n  id: \"MJMATHI-3C0\",\n  d: \"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  strokeWidth: 30,\n  id: \"MJMAIN-222A\",\n  d: \"M591 598H592Q604 598 611 583V376Q611 345 611 296Q610 162 606 148Q605 146 605 145Q586 68 507 23T333 -22Q268 -22 209 -1T106 66T56 173Q55 180 55 384L56 585Q66 598 75 598Q85 598 95 585V378L96 172L98 162Q112 95 181 57T332 18Q415 18 487 58T570 175Q571 180 571 383V583Q579 598 591 598Z\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  stroke: \"currentColor\",\n  fill: \"currentColor\",\n  strokeWidth: 0,\n  transform: \"matrix(1 0 0 -1 0 0)\"\n}, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#MJMAIN-222A\",\n  x: 0,\n  y: 0\n}));\n\nfunction SvgUnion(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"1.55ex\",\n    height: \"1.861ex\",\n    style: {\n      verticalAlign: \"-0.252ex\"\n    },\n    viewBox: \"0 -693 667.5 801.3\",\n    role: \"img\",\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgUnion, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/union.c8812123.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.015 7c4.751 0 8.063 3.012 9.504 4.636-1.401 1.837-4.713 5.364-9.504 5.364-4.42 0-7.93-3.536-9.478-5.407 1.493-1.647 4.817-4.593 9.478-4.593zm0-2c-7.569 0-12.015 6.551-12.015 6.551s4.835 7.449 12.015 7.449c7.733 0 11.985-7.449 11.985-7.449s-4.291-6.551-11.985-6.551zm-.015 3c-2.209 0-4 1.792-4 4 0 2.209 1.791 4 4 4s4-1.791 4-4c0-2.208-1.791-4-4-4z\"\n});\n\nfunction SvgEye(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgEye, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/eye.65471899.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21 3L3 10.53v.98l6.84 2.65L12.48 21h.98L21 3z\"\n});\n\nfunction SvgNearMe(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgNearMe, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/near_me.2a308adc.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1.439 16.873l-1.439 7.127 7.128-1.437 16.873-16.872-5.69-5.69-16.872 16.872zm4.702 3.848l-3.582.724.721-3.584 2.861 2.86zm15.031-15.032l-13.617 13.618-2.86-2.861 10.825-10.826 2.846 2.846 1.414-1.414-2.846-2.846 1.377-1.377 2.861 2.86z\"\n});\n\nfunction SvgPen(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPen, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/pen.ebb286f9.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSelectionLasso(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0,3)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      strokeWidth: 0.343565\n    },\n    d: \"M 23.942314,4.6958443 C 23.446206,1.8868581 19.727461,0 14.687364,0 13.437819,0 12.150138,0.11543779 10.859708,0.34287772 4.1629423,1.5250844 -0.58168816,5.2884937 0.05768601,8.911385 c 0.25355086,1.439193 1.35605049,2.63583 3.04638949,3.461072 -0.2569865,0.387198 -0.4074679,0.826617 -0.4074679,1.29524 0,1.337498 1.1863293,2.457176 2.7639791,2.728248 l -1.3615475,2.333149 c -0.1576963,0.271073 -0.066308,0.61876 0.2047647,0.776457 0.090014,0.05291 0.1886171,0.07799 0.2858459,0.07799 0.1951448,0 0.3851362,-0.100665 0.4912977,-0.281723 l 1.6803757,-2.88148 C 8.41868,16.20561 9.6895264,15.063601 9.6998333,13.683844 c 6.872e-4,-0.0055 0.00137,-0.01065 0.00137,-0.01615 0,-0.02336 -0.00344,-0.04569 -0.00481,-0.06837 1.1292977,-0.0213 2.2847067,-0.130211 3.4435507,-0.334975 6.69711,-1.181863 11.44174,-4.9456164 10.802366,-8.5685077 z M 3.83312,13.667353 c 0,-0.30749 0.1281497,-0.59849 0.3470005,-0.848261 0.1219655,0.04295 0.2456489,0.08383 0.3717372,0.123339 l 1.2234344,2.352045 C 4.6865351,15.149835 3.83312,14.46408 3.83312,13.667353 Z M 7.0141869,15.216144 6.0223152,13.309702 5.4008064,12.114097 c 0.121622,-0.03161 0.2477103,-0.05634 0.3772342,-0.07387 0.1367388,-0.0189 0.2772568,-0.02886 0.420867,-0.02886 0.5067581,0 0.980534,0.11956 1.3701366,0.317454 0.5696305,0.289968 0.9554538,0.750345 0.9904974,1.262944 0.00137,0.02542 0.0055,0.05016 0.0055,0.07593 0,0.698124 -0.6562089,1.310356 -1.5508518,1.548447 z m 5.9185921,-3.126441 c -1.217251,0.214728 -2.429691,0.323982 -3.6060571,0.324669 -0.5765018,-0.911821 -1.7614569,-1.53917 -3.1278143,-1.53917 -0.4717146,0 -0.921441,0.07593 -1.332001,0.211292 -0.3061162,0.100665 -0.5878394,0.237403 -0.8427645,0.39991 C 2.4598914,10.828133 1.4360682,9.8579062 1.2319907,8.7035283 0.72660678,5.8381974 5.2307418,2.5475333 11.067221,1.5175259 c 1.222061,-0.2161023 2.439998,-0.3246688 3.620143,-0.3246688 4.371863,0 7.694479,1.5250844 8.080645,3.7101568 0.505041,2.8653309 -3.998751,6.1566821 -9.83523,7.1866891 z\",\n    id: \"path10\"\n  })));\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSelectionLasso, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/selection_lasso.00e80a33.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"       M19 19h2v2h-2v-2zm0-2h2v-2h-2v2z       M3 13h2v-2H3v2zm0 4h2v-2H3v2z       m0-8h2V7H3v2zm0-4h2V3H3v2z       m4 0h2V3H7v2zm8 16h2v-2h-2v2z       m-4 0h2v-2h-2v2z       m4 0h2v-2h-2v2z       m-8 0h2v-2H7v2z       m-4 0h2v-2H3v2z       M11 5h2v-2h-2v2z       M15 5h2v-2h-2v2z       M19 5h2v-2h-2v2z       M19 9h2v-2h-2v2z       M19 13h2v-2h-2v2z     \"\n});\n\nfunction SvgSelectionRectangle(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSelectionRectangle, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/selection_rectangle.aa477261.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 24h-14c-1.104 0-2-.896-2-2v-16h18v16c0 1.104-.896 2-2 2m-9-14c0-.552-.448-1-1-1s-1 .448-1 1v9c0 .552.448 1 1 1s1-.448 1-1v-9zm6 0c0-.552-.448-1-1-1s-1 .448-1 1v9c0 .552.448 1 1 1s1-.448 1-1v-9zm6-5h-20v-2h6v-1.5c0-.827.673-1.5 1.5-1.5h5c.825 0 1.5.671 1.5 1.5v1.5h6v2zm-12-2h4v-1h-4v1z\"\n});\n\nfunction SvgTrash(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 24 24\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTrash, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/trash.e1c26cd0.svg\";\nexport { ForwardRef as ReactComponent };","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import React from 'react';\nimport VitessceGrid from 'vitessce-grid';\n\nimport { SourcePublisher } from '../components/sourcepublisher';\n\nexport default class PubSubVitessceGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.rowHeight = props.rowHeight;\n    this.state = { allReady: false };\n  }\n\n  render() {\n    const { config, getComponent, theme } = this.props;\n    const { allReady } = this.state;\n    return (\n      <div className={`vitessce-container vitessce-theme-${theme}`}>\n        { allReady && <SourcePublisher layers={config.layers} /> }\n        <VitessceGrid\n          layout={config.staticLayout}\n          rowHeight={this.rowHeight}\n          getComponent={getComponent}\n          onAllReady={() => { this.setState({ allReady: true }); }}\n          draggableHandle=\".title\"\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { LIGHT_CARD } from '../components/classNames';\nimport version from '../version.json';\n\nfunction DatasetList(props) {\n  const { configs, theme } = props;\n  const aClassName = 'list-group-item list-group-item-action flex-column align-items-start bg-secondary';\n  const links = configs.map(\n    ({ id, name, description }) => (\n      <div className={aClassName} key={id}>\n        <a\n          href={`?dataset=${id}&theme=${theme}`}\n          key={id}\n        >\n          <h5>{name}</h5>\n          <p>{description}</p>\n        </a>\n        <a\n          href={`?dataset=${id}&theme=${theme}&small`}\n          style={{ fontSize: '75%' }}\n        >\n          {name} as component\n        </a>\n      </div>\n    ),\n  );\n  return (\n    <div className=\"list-group\">\n      {links}\n    </div>\n  );\n}\n\nfunction Form(props) {\n  const { configs, theme } = props;\n  return (\n    <form method=\"GET\">\n      <h1><span role=\"img\" aria-label=\"fast train!\">🚄 </span> Vitessce</h1>\n      <div>Select a dataset:</div>\n      <DatasetList configs={configs} theme={theme} />\n\n      <br />\n      <div>Or specify URL of configuration:</div>\n      <div className=\"input-group mb-3\">\n        <input type=\"text\" name=\"url\" className=\"form-control\" />\n        <input type=\"hidden\" name=\"theme\" value={theme} />\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-outline-secondary\" type=\"submit\">Load</button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nfunction Info() {\n  return (\n    <>\n      <p>\n        This is a demo of key concepts for a\n        {\n          'visual integration tool for exploration of spatial single cell experiments'.split(' ')\n            .map(\n              (word, i) => (['for', 'of'].includes(word)\n              /* eslint-disable react/no-array-index-key */\n                ? <span key={i}> {word}</span>\n                : <span key={i}> <b>{word[0]}</b>{word.slice(1)}</span>),\n              /* eslint-enable */\n            )\n        }.\n        This demo focusses on scalable, linked visualizations that support both\n        spatial and non-spatial representation of cell-level and molecule-level data.\n      </p>\n      <p>\n        Vitessce is supported by the NIH Common Fund, through\n        the <a href=\"https://commonfund.nih.gov/HuBMAP\">Human BioMolecular Atlas Program (HuBMAP)</a>,\n        Integration, Visualization & Engagement (HIVE) Initiative,\n        RFA-RM-18-001.\n      </p>\n      <p>\n        More information:\n      </p>\n      <ul>\n        <li><a href=\"https://github.com/hubmapconsortium/vitessce\">GitHub</a></li>\n        <li><a href=\"https://www.npmjs.com/package/vitessce\">NPM</a></li>\n      </ul>\n      <p>\n        This deployment: branch={version.branch} | hash={version.hash} | date={version.date}\n      </p>\n    </>\n  );\n}\n\nexport default function Welcome(props) {\n  const { configs, theme } = props;\n  return (\n    <div className={`vitessce-container vitessce-theme-${theme}`}>\n      <div className=\"react-grid-layout container-fluid\" style={{ height: '100vh' }}>\n        <div className=\"row\">\n          <div className=\"welcome-col-left\">\n            <div className={LIGHT_CARD}>\n              <Form configs={configs} theme={theme} />\n            </div>\n          </div>\n          <div className=\"welcome-col-right\">\n            <div className={LIGHT_CARD}>\n              <Info />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import Ajv from 'ajv';\n\nimport datasetSchema from '../schemas/dataset.schema.json';\n\n// Exported because used by the cypress tests: They route API requests to the fixtures instead.\nexport const urlPrefix = 'https://s3.amazonaws.com/vitessce-data/0.0.24/master_release';\n\nfunction makeLayerNameToConfig(datasetPrefix) {\n  return name => ({\n    name,\n    type: name.toUpperCase(),\n    url: `${urlPrefix}/${datasetPrefix}/${datasetPrefix}.${name}.json`,\n  });\n}\n\nconst linnarssonLayerNames = [\n  'cells',\n  'clusters',\n  'factors',\n  'genes',\n  'raster',\n  'molecules',\n  'neighborhoods',\n];\nconst linnarssonDescription = 'Spatial organization of the somatosensory cortex revealed by cyclic smFISH';\nconst linnarssonBase = {\n  description: linnarssonDescription,\n  layers: linnarssonLayerNames\n    .map(makeLayerNameToConfig('linnarsson')),\n};\nconst linnarssonBaseNoClusters = {\n  description: linnarssonDescription,\n  layers: linnarssonLayerNames.filter(name => name !== 'clusters')\n    .map(makeLayerNameToConfig('linnarsson')),\n};\n\nconst driesDescription = 'Giotto, a pipeline for integrative analysis and visualization of single-cell spatial transcriptomic data';\nconst driesBase = {\n  description: driesDescription,\n  layers: [\n    'cells',\n    'factors',\n  ].map(makeLayerNameToConfig('dries')),\n};\n\nconst wangDescription = 'Multiplexed imaging of high-density libraries of RNAs with MERFISH and expansion microscopy';\nconst wangBase = {\n  description: wangDescription,\n  layers: [\n    'cells',\n    'molecules',\n    'genes',\n  ].map(makeLayerNameToConfig('wang')),\n};\n\nconst vanderbiltDescription = 'High Bit Depth (uint16) Multiplex Immunofluorescence Imaging';\nconst vanderbiltBase = {\n  description: vanderbiltDescription,\n  layers: [\n    'raster',\n  ].map(makeLayerNameToConfig('vanderbilt')),\n};\n\n/* eslint-disable object-property-newline */\n/* eslint-disable object-curly-newline */\nconst configs = {\n  'just-scatter': {\n    public: false,\n    layers: [\n      {\n        name: 'cells',\n        type: 'CELLS',\n        url: `${urlPrefix}/linnarsson/linnarsson.cells.json`,\n        requestInit: {\n          // Where the client checks that the value is from an enumeration,\n          // I've chosen one of the allowed values,\n          // but nothing on our S3 actually needs any of these.\n          method: 'GET',\n          headers: { 'x-foo': 'FAKE' },\n          mode: 'cors',\n          credentials: 'omit',\n          cache: 'no-store',\n          redirect: 'error',\n          referrer: 'FAKE',\n          integrity: 'FAKE',\n        },\n      },\n    ],\n    name: 'Linnarsson, just scatterplot',\n    staticLayout: [\n      {\n        component: 'scatterplot',\n        props: {\n          mapping: 't-SNE',\n          view: {\n            zoom: 0.75,\n            target: [0, 0, 0],\n          },\n        },\n        x: 0, y: 0, w: 12, h: 2,\n      },\n    ],\n  },\n  'just-scatter-expression': {\n    public: false,\n    layers: [\n      {\n        name: 'cells',\n        type: 'CELLS',\n        url: 'https://s3.amazonaws.com/vitessce-data/0.0.20/master_release/linnarsson/linnarsson.cells.json',\n      },\n      {\n        name: 'genes',\n        type: 'GENES',\n        url: 'https://s3.amazonaws.com/vitessce-data/0.0.20/master_release/linnarsson/linnarsson.genes.json',\n      },\n    ],\n    name: 'Linnarsson, just scatterplot and expression',\n    staticLayout: [\n      {\n        component: 'scatterplot',\n        props: {\n          mapping: 't-SNE',\n          view: {\n            zoom: 0.75,\n            target: [0, 0, 0],\n          },\n        },\n        x: 0, y: 0, w: 8, h: 2,\n      },\n      {\n        component: 'genes',\n        x: 8, y: 2, w: 4, h: 2,\n      },\n    ],\n  },\n  'linnarsson-2018': {\n    ...linnarssonBase,\n    name: 'Linnarsson',\n    public: true,\n    staticLayout: [\n      { component: 'description',\n        props: {\n          description: `Linnarsson: ${linnarssonDescription}`,\n        },\n        x: 0, y: 0, w: 2, h: 1 },\n      { component: 'cellSets',\n        props: {\n          datasetId: 'linnarsson-2018',\n        },\n        x: 0, y: 3, w: 2, h: 2 },\n      { component: 'channels',\n        x: 0, y: 1, w: 2, h: 2,\n      },\n      { component: 'status',\n        x: 0, y: 5, w: 2, h: 1 },\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -5.5,\n            target: [16000, 20000, 0],\n          },\n        },\n        x: 2, y: 0, w: 4, h: 4 },\n      { component: 'scatterplot',\n        props: {\n          mapping: 'PCA',\n          // This intentionally does not have a  \"view\" prop,\n          // in order to have an example that uses the default.\n        },\n        x: 6, y: 0, w: 4, h: 2 },\n      { component: 'scatterplot',\n        props: {\n          mapping: 't-SNE',\n          view: {\n            zoom: 0.75,\n            target: [0, 0, 0],\n          },\n        },\n        x: 6, y: 2, w: 4, h: 2 },\n      { component: 'factors',\n        x: 10, y: 0, w: 2, h: 2 },\n      { component: 'genes',\n        x: 10, y: 2, w: 2, h: 2 },\n      { component: 'heatmap',\n        x: 2, y: 4, w: 10, h: 2 },\n    ],\n  },\n  'linnarsson-2018-two-spatial': {\n    ...linnarssonBase,\n    name: 'Linnarsson (two spatial)',\n    staticLayout: [\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -8,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 0, y: 0, w: 5, h: 2 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 2, w: 5, h: 2 },\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 5, y: 0, w: 5, h: 2 },\n      { component: 'scatterplot',\n        props: { mapping: 'PCA' },\n        x: 5, y: 2, w: 5, h: 2 },\n      { component: 'factors',\n        x: 10, y: 0, w: 2, h: 2 },\n      { component: 'genes',\n        x: 10, y: 2, w: 2, h: 2 },\n      { component: 'heatmap',\n        x: 0, y: 4, w: 12 },\n    ],\n  },\n  'linnarsson-2018-just-spatial': {\n    ...linnarssonBaseNoClusters,\n    name: 'Linnarsson (just spatial)',\n    staticLayout: [\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 0, y: 0, w: 10, h: 2 },\n      { component: 'factors',\n        x: 10, y: 0, w: 2, h: 1 },\n      { component: 'genes',\n        x: 10, y: 1, w: 2, h: 1 },\n    ],\n  },\n  'linnarsson-2018-static': {\n    ...linnarssonBase,\n    name: 'Linnarsson (static layout)',\n    staticLayout: [\n      { component: 'description',\n        props: {\n          description: `Linnarsson (static layout): ${linnarssonDescription}`,\n        },\n        x: 0, y: 0, w: 3, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 2, w: 3, h: 2 },\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 3, y: 0, w: 6, h: 4 },\n      { component: 'factors',\n        x: 9, y: 0, w: 3, h: 2 },\n      { component: 'genes',\n        x: 9, y: 2, w: 3, h: 2 },\n      { component: 'heatmap',\n        x: 0, y: 4, w: 12, h: 1 },\n    ],\n  },\n  'linnarsson-2018-dozen': {\n    ...linnarssonBase,\n    name: 'Linnarsson (static layout, redundant components for performance testing)',\n    staticLayout: [\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 0, y: 0, w: 4, h: 1 },\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 0, y: 1, w: 4, h: 1 },\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 4, y: 0, w: 4, h: 1 },\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 4, y: 1, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 2, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 3, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 4, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 5, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 'PCA' },\n        x: 4, y: 2, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 'PCA' },\n        x: 4, y: 3, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 'PCA' },\n        x: 4, y: 4, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 'PCA' },\n        x: 4, y: 5, w: 4, h: 1 },\n      { component: 'factors',\n        x: 8, y: 0, w: 4, h: 2 },\n      { component: 'genes',\n        x: 8, y: 2, w: 4, h: 2 },\n      { component: 'heatmap',\n        x: 8, y: 4, w: 4, h: 2 },\n    ],\n  },\n  'dries-2019': {\n    ...driesBase,\n    name: 'Dries',\n    public: true,\n    staticLayout: [\n      { component: 'description',\n        props: {\n          description: driesDescription,\n        },\n        x: 0, y: 0, w: 5, h: 2 },\n      { component: 'status',\n        x: 0, y: 1, w: 5, h: 2 },\n      { component: 'scatterplot',\n        props: {\n          mapping: 't-SNE',\n          view: {\n            zoom: 3,\n            target: [0, 0, 0],\n          },\n        },\n        x: 0, y: 2, w: 5, h: 4 },\n      { component: 'spatial',\n        props: {\n          cellRadius: 50,\n          view: {\n            zoom: -4.4,\n            target: [3800, -900, 0],\n          },\n        },\n        x: 5, y: 0, w: 5, h: 4 },\n      { component: 'scatterplot',\n        props: {\n          mapping: 'UMAP',\n          view: {\n            zoom: 3,\n            target: [0, 0, 0],\n          },\n        },\n        x: 5, y: 4, w: 5, h: 4 },\n      { component: 'factors',\n        x: 10, y: 0, w: 2, h: 8 },\n    ],\n  },\n  'wang-2019': {\n    ...wangBase,\n    name: 'Wang',\n    public: true,\n    staticLayout: [\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -1,\n            target: [0, 0, 0],\n          },\n          moleculeRadius: 2,\n        },\n        x: 0, y: 0, w: 10, h: 2 },\n      { component: 'genes',\n        x: 10, y: 0, w: 2, h: 2 },\n    ],\n  },\n\n  vanderbilt: {\n    ...vanderbiltBase,\n    name: 'Spraggins',\n    public: true,\n    staticLayout: [\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [20000, 20000, 0],\n          },\n        },\n        x: 0, y: 0, w: 9, h: 2 },\n      { component: 'channels',\n        x: 9, y: 0, w: 3, h: 2,\n      },\n    ],\n  },\n};\n/* eslint-enable */\n\nexport function listConfigs(showAll) {\n  return Object.entries(configs).filter(\n    entry => showAll || entry[1].public,\n  ).map(\n    ([id, config]) => ({\n      id,\n      name: config.name,\n      description: config.description,\n    }),\n  );\n}\n\nexport function getConfig(id) {\n  const datasetConfig = configs[id];\n  const validate = new Ajv().compile(datasetSchema);\n  const valid = validate(datasetConfig);\n  if (!valid) {\n    const failureReason = JSON.stringify(validate.errors, null, 2);\n    console.warn('dataset validation failed', failureReason);\n  }\n  return datasetConfig;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Ajv from 'ajv';\n\nimport datasetSchema from '../schemas/dataset.schema.json';\n\nimport { LIGHT_CARD } from '../components/classNames';\n\nimport '../css/index.scss';\nimport '../../node_modules/react-grid-layout/css/styles.css';\nimport '../../node_modules/react-resizable/css/styles.css';\n\nimport Welcome from './Welcome';\nimport PubSubVitessceGrid from './PubSubVitessceGrid';\n\nimport { getConfig, listConfigs } from './api';\nimport getComponent from './componentRegistry';\n\nfunction renderComponent(react, id) {\n  ReactDOM.render(react, document.getElementById(id));\n}\n\nfunction Warning(props) {\n  const {\n    title,\n    preformatted,\n    unformatted,\n    theme,\n  } = props;\n  return (\n    <div className={`vitessce-container vitessce-theme-${theme}`}>\n      <div className=\"warning-layout container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className={LIGHT_CARD}>\n              <h1>{title}</h1>\n              <pre>{preformatted}</pre>\n              <div>{unformatted}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction preformattedDetails(response) {\n  return `\n    ok: ${response.ok}\n    status: ${response.status}\n    statusText: ${response.statusText}\n    redirected: ${response.redirected}\n    type: ${response.type}\n    url: ${response.url}`; // TODO: headers\n}\n\nexport function validateAndRender(config, id, rowHeight, theme) {\n  if (!config) {\n    // If the config value is undefined, show a warning message\n    renderComponent(\n      <Warning\n        title=\"No such dataset\"\n        unformatted=\"The dataset configuration could not be found.\"\n        theme={theme}\n      />, id,\n    );\n    return;\n  }\n  // NOTE: Remove when this is available in UI.\n  console.groupCollapsed('🚄 Vitessce view configuration');\n  console.info(`data:,${JSON.stringify(config)}`);\n  console.info(JSON.stringify(config, null, 2));\n  console.groupEnd();\n  const validate = new Ajv().compile(datasetSchema);\n  const valid = validate(config);\n  if (!valid) {\n    const failureReason = JSON.stringify(validate.errors, null, 2);\n    renderComponent(\n      <Warning\n        title=\"Config validation failed\"\n        preformatted={failureReason}\n        theme={theme}\n      />, id,\n    );\n    return;\n  }\n  renderComponent(\n    <PubSubVitessceGrid\n      config={config}\n      getComponent={getComponent}\n      rowHeight={rowHeight}\n      theme={theme}\n    />, id,\n  );\n}\n\nfunction renderResponse(response, id, theme) {\n  if (!response.ok) {\n    renderComponent(\n      <Warning\n        title=\"Fetch response not OK\"\n        preformatted={preformattedDetails(response)}\n        theme={theme}\n      />, id,\n    );\n  } else {\n    response.text().then((text) => {\n      try {\n        const config = JSON.parse(text);\n        validateAndRender(config, id, undefined, theme);\n      } catch (e) {\n        renderComponent(\n          <Warning\n            title=\"Error parsing JSON\"\n            preformatted={preformattedDetails(response)}\n            unformatted={`${e.message}: ${text}`}\n            theme={theme}\n          />, id,\n        );\n      }\n    });\n  }\n}\n\n/**\n * Use the theme provided if it is valid, otherwise fall back to the 'dark' theme.\n * @param {string} theme A potentially invalid theme name.\n * @returns {string} A valid theme name.\n */\nfunction validateTheme(theme) {\n  return (['light', 'dark'].includes(theme) ? theme : 'dark');\n}\n\nexport function renderApp(id, rowHeight = null) {\n  const urlParams = new URLSearchParams(window.location.search);\n  const datasetId = urlParams.get('dataset');\n  const datasetUrl = urlParams.get('url');\n  const showAll = urlParams.get('show') === 'all';\n  const theme = validateTheme(urlParams.get('theme'));\n\n  if (datasetId) {\n    const config = getConfig(datasetId);\n    validateAndRender(config, id, rowHeight, theme);\n  } else if (datasetUrl) {\n    fetch(datasetUrl)\n      .then(response => renderResponse(response, id, theme))\n      .catch(error => renderComponent(\n        <Warning\n          title=\"Error fetching\"\n          unformatted={error.message}\n          theme={theme}\n        />, id,\n      ));\n  } else {\n    const configs = listConfigs(showAll);\n    renderComponent(<Welcome configs={configs} theme={theme} />, id);\n  }\n}\n","import React from 'react';\n\nimport TitleInfo from '../components/TitleInfo';\nimport StatusSubscriber from '../components/status/StatusSubscriber';\nimport FactorsSubscriber from '../components/factors/FactorsSubscriber';\nimport GenesSubscriber from '../components/genes/GenesSubscriber';\nimport CellSetsManagerSubscriber from '../components/sets/CellSetsManagerSubscriber';\nimport HoverableScatterplotSubscriber from '../components/scatterplot/HoverableScatterplotSubscriber';\nimport HoverableSpatialSubscriber from '../components/spatial/HoverableSpatialSubscriber';\nimport HoverableHeatmapSubscriber from '../components/heatmap/HoverableHeatmapSubscriber';\nimport ChannelsSubscriber from '../components/channels/ChannelsSubscriber';\n\nclass Description extends React.Component {\n  componentDidMount() {\n    const { onReady } = this.props;\n    onReady();\n  }\n\n  render() {\n    const { description, removeGridComponent } = this.props;\n    return (\n      <TitleInfo title=\"Data Set\" removeGridComponent={removeGridComponent} isScroll>\n        <p className=\"details\">{description}</p>\n      </TitleInfo>\n    );\n  }\n}\n\nconst registry = {\n  description: Description,\n  status: StatusSubscriber,\n  factors: FactorsSubscriber,\n  genes: GenesSubscriber,\n  cellSets: CellSetsManagerSubscriber,\n  scatterplot: HoverableScatterplotSubscriber,\n  spatial: HoverableSpatialSubscriber,\n  heatmap: HoverableHeatmapSubscriber,\n  channels: ChannelsSubscriber,\n};\n\nexport default function getComponent(name) {\n  const component = registry[name];\n  if (component === undefined) {\n    throw new Error(`Could not find definition for \"${name}\" in registry.`);\n  }\n  return registry[name];\n}\n","import React from 'react';\n\nimport DeckGL, { OrthographicView, COORDINATE_SYSTEM } from 'deck.gl';\nimport SelectionLayer from '../layers/SelectionLayer';\nimport ToolMenu from './ToolMenu';\n\n/**\n Abstract React component: Provides drag-to-select functionality to subclasses.\n @param {Object} props React props\n */\nexport default class AbstractSelectableComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderSelectionLayers = this.renderSelectionLayers.bind(this);\n    this.deckRef = React.createRef();\n    this.getCellCoords = this.getCellCoords.bind(this);\n    this.onViewStateChange = this.onViewStateChange.bind(this);\n    this.initializeViewInfo = this.initializeViewInfo.bind(this);\n    this.onWebGLInitialized = this.onWebGLInitialized.bind(this);\n    const { uuid = null } = props || {};\n    // Store view and viewport information in a mutable object.\n    this.viewInfo = {\n      viewport: null,\n      width: null,\n      height: null,\n      uuid,\n    };\n    this.state = {\n      tool: null,\n      gl: null,\n    };\n  }\n\n  getCellCoords() { // eslint-disable-line class-methods-use-this\n    // No-op\n  }\n\n  getCellBaseLayerId() { // eslint-disable-line class-methods-use-this\n    // No-op\n  }\n\n  renderSelectionLayers() {\n    const { tool } = this.state;\n    const { updateCellsSelection } = this.props;\n    if (!tool) {\n      return [];\n    }\n\n    const { zoom } = this.getInitialViewState();\n    const editHandlePointRadius = 5 / (zoom + 16);\n\n    return [new SelectionLayer({\n      id: 'selection',\n      getCellCoords: this.getCellCoords,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      selectionType: tool,\n      onSelect: ({ pickingInfos }) => {\n        const cellIds = new Set(pickingInfos.map(cellObj => cellObj.object[0]));\n        updateCellsSelection(cellIds);\n      },\n      layerIds: [this.getCellBaseLayerId()],\n      getTentativeFillColor: () => [255, 255, 255, 95],\n      getTentativeLineColor: () => [143, 143, 143, 255],\n      getTentativeLineDashArray: () => [7, 4],\n      lineWidthMinPixels: 2,\n      lineWidthMaxPixels: 2,\n      getEditHandlePointColor: () => [0xff, 0xff, 0xff, 0xff],\n      getEditHandlePointRadius: () => editHandlePointRadius,\n      editHandlePointRadiusScale: 1,\n      editHandlePointRadiusMinPixels: editHandlePointRadius,\n      editHandlePointRadiusMaxPixels: 2 * editHandlePointRadius,\n    })];\n  }\n\n  renderLayersMenu() { // eslint-disable-line class-methods-use-this\n    // No-op\n  }\n\n  initializeViewInfo(viewProps) {\n    const {\n      width, height, viewport,\n    } = viewProps;\n    // Capture the viewport, width, and height values from DeckGL instantiation to be used later.\n    this.viewInfo.viewport = viewport;\n    this.viewInfo.width = width;\n    this.viewInfo.height = height;\n    const {\n      updateViewInfo = () => {\n        console.warn('AbstractSelectableComponent updateViewInfo from renderImagesFromView');\n      },\n    } = this.props;\n    updateViewInfo(this.viewInfo);\n  }\n\n\n  onViewStateChange({ viewState }) {\n    const {\n      updateViewInfo = () => {\n        console.warn('AbstractSelectableComponent updateViewInfo from onViewStateChange');\n      },\n    } = this.props;\n    // Update the viewport field of the `viewInfo` object\n    // to satisfy components (e.g. CellTooltip2D) that depend on an\n    // up-to-date viewport instance (to perform projections).\n    this.viewInfo.viewport = (new OrthographicView()).makeViewport({\n      viewState,\n      width: this.width,\n      height: this.height,\n    });\n    updateViewInfo(this.viewInfo);\n  }\n\n  onWebGLInitialized(gl) {\n    // gl needs to be initialized for us to use it in Texture creation\n    this.setState({ gl });\n  }\n\n  render() {\n    const { tool, gl } = this.state;\n    const toolProps = {\n      setActiveTool: (toolUpdate) => { this.setState({ tool: toolUpdate }); },\n      /* eslint-disable react/destructuring-assignment */\n      isActiveTool: toolCheck => (toolCheck === this.state.tool),\n      /* esline-enable */\n      onViewStateChange: this.onViewStateChange,\n    };\n\n    let deckProps = {\n      views: [new OrthographicView({ id: 'ortho' })], // id is a fix for https://github.com/uber/deck.gl/issues/3259\n      // gl needs to be initialized for us to use it in Texture creation\n      layers: gl ? this.renderLayers().concat(this.renderSelectionLayers()) : [],\n      initialViewState: this.getInitialViewState(),\n    };\n    if (tool) {\n      deckProps = {\n        controller: { dragPan: false },\n        getCursor: () => 'crosshair',\n        ...deckProps,\n      };\n    } else {\n      deckProps = {\n        controller: true,\n        getCursor: interactionState => (interactionState.isDragging ? 'grabbing' : 'default'),\n        ...deckProps,\n      };\n    }\n    return (\n      <>\n        <div className=\"d-flex\">\n          <ToolMenu {...toolProps} />\n          {this.renderLayersMenu()}\n        </div>\n        <DeckGL\n          glOptions={{ webgl2: true }}\n          ref={this.deckRef}\n          onWebGLInitialized={this.onWebGLInitialized}\n          {...deckProps}\n        >\n          {this.initializeViewInfo}\n        </DeckGL>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nexport default function ClosePane(props) {\n  const { removeGridComponent } = props;\n  return (\n    <button\n      type=\"button\"\n      className=\"close-pane-button\"\n      onClick={() => { removeGridComponent(); }}\n      title=\"close\"\n    >\n      &#10006;\n    </button>\n  );\n}\n","import React from 'react';\nimport { SCROLL_CARD, BLACK_CARD } from './classNames';\nimport ClosePaneButton from './ClosePaneButton';\n\nexport default function TitleInfo(props) {\n  const {\n    title, info, children, isScroll, removeGridComponent,\n  } = props;\n  const childClassName = isScroll ? SCROLL_CARD : BLACK_CARD;\n  return (\n    // d-flex without wrapping div is not always full height; I don't understand the root cause.\n    <>\n      <div\n        className=\"title d-flex justify-content-between align-items-baseline\"\n      >\n        {title}\n        <span className=\"details pl-2 align-items-end\">\n          <span className=\"d-flex justify-content-between\">\n            {info}\n            <ClosePaneButton removeGridComponent={removeGridComponent} />\n          </span>\n        </span>\n      </div>\n      <div className={childClassName}>\n        {children}\n      </div>\n    </>\n    // \"pl-2\" only matters when the window is very narrow.\n  );\n}\n","import React from 'react';\nimport { SELECTION_TYPE } from 'nebula.gl';\nimport { ReactComponent as PointerIconSVG } from '../assets/tools/near_me.svg';\nimport { ReactComponent as SelectRectangleIconSVG } from '../assets/tools/selection_rectangle.svg';\nimport { ReactComponent as SelectLassoIconSVG } from '../assets/tools/selection_lasso.svg';\n\n\nexport function IconButton(props) {\n  const {\n    alt, onClick, isActive, children,\n  } = props;\n  const inactive = 'btn btn-outline-secondary mr-2 icon';\n  const active = `${inactive} active`;\n  return (\n    <button\n      className={isActive ? active : inactive}\n      onClick={onClick}\n      type=\"button\"\n      title={alt}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport default function ToolMenu(props) {\n  const { setActiveTool, isActiveTool } = props;\n  return (\n    <div className=\"tool\">\n      <IconButton\n        alt=\"pointer tool\"\n        onClick={() => setActiveTool(null)}\n        isActive={isActiveTool(null)}\n      ><PointerIconSVG />\n      </IconButton>\n      <IconButton\n        alt=\"select rectangle\"\n        onClick={() => setActiveTool(SELECTION_TYPE.RECTANGLE)}\n        isActive={isActiveTool(SELECTION_TYPE.RECTANGLE)}\n      ><SelectRectangleIconSVG />\n      </IconButton>\n      <IconButton\n        alt=\"select lasso\"\n        onClick={() => setActiveTool(SELECTION_TYPE.POLYGON)}\n        isActive={isActiveTool(SELECTION_TYPE.POLYGON)}\n      ><SelectLassoIconSVG />\n      </IconButton>\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { TOOLTIP_ANCESTOR } from '../classNames';\nimport CellTooltipText from './CellTooltipText';\n\nexport default function CellTooltip1DVertical(props) {\n  const {\n    hoveredCellInfo,\n    cellIndex,\n    numCells,\n    uuid,\n  } = props;\n\n  const ref = useRef();\n  const [x, setX] = useState(0);\n  const [parentHeight, setParentHeight] = useState(0);\n  const [parentWidth, setParentWidth] = useState(0);\n  const y = 0;\n  const lineWidth = 1;\n  // Compute the desired x-position of the element\n  // based on the width of the sibling heatmap canvas.\n  useEffect(() => {\n    const el = ref.current;\n    if (!el || !cellIndex || !numCells) {\n      return;\n    }\n    // Obtain the width of the heatmap canvas.\n    const { width } = el.parentNode.querySelector('canvas').getBoundingClientRect();\n    // Obtain the height of the entire parent card element.\n    const { height } = el.closest(`.${TOOLTIP_ANCESTOR}`).getBoundingClientRect();\n    setX((cellIndex / numCells) * width);\n    setParentWidth(width);\n    setParentHeight(height);\n  }, [cellIndex, numCells]);\n\n  // Check that all data necessary to show the tooltip has been passed.\n  if (!hoveredCellInfo || !uuid || !cellIndex || !numCells) {\n    return null;\n  }\n\n  // If we're in the component that triggered the event, do not show the vertical line.\n  // Instead, show a tooltip with text.\n  if (hoveredCellInfo.uuid === uuid) {\n    return (\n      <div ref={ref} className=\"cell-tooltip-wrapper\">\n        <CellTooltipText\n          cellId={hoveredCellInfo.cellId}\n          factors={hoveredCellInfo.factors}\n          x={x}\n          y={y}\n          parentWidth={parentWidth}\n          parentHeight={parentHeight}\n        />\n      </div>\n    );\n  }\n  // If we're _not_ in the component that triggered the event, show the vertical line.\n  return (\n    <div\n      ref={ref}\n      className=\"cell-emphasis-vertical\"\n      style={{\n        top: `${y}px`,\n        left: `${x - lineWidth / 2}px`,\n        width: `${lineWidth}px`,\n        height: `${parentHeight}px`,\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport PubSub from 'pubsub-js';\nimport { fromEntries } from '../utils';\n\nimport { CELLS_HOVER, CLUSTERS_ADD } from '../../events';\nimport CellTooltip1DVertical from './CellTooltip1DVertical';\n\nexport default class CellTooltip1DVerticalSubscriber extends React.Component {\n  constructor(props) {\n    super(props);\n    this.clusterColMap = null;\n    this.state = {\n      hoveredCellInfo: null,\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillMount() {\n    this.cellsHoverToken = PubSub.subscribe(\n      CELLS_HOVER, this.cellsHoverSubscriber.bind(this),\n    );\n    this.clustersAddToken = PubSub.subscribe(\n      CLUSTERS_ADD, this.clustersAddSubscriber.bind(this),\n    );\n  }\n\n  componentWillUnmount() {\n    PubSub.unsubscribe(this.cellsHoverToken);\n    PubSub.unsubscribe(this.clustersAddToken);\n  }\n\n  cellsHoverSubscriber(msg, hoverInfo) {\n    const { hoveredCellInfo } = this.state;\n    if (!hoveredCellInfo || !hoverInfo\n        || (hoveredCellInfo && hoverInfo && hoveredCellInfo.cellId !== hoverInfo.cellId)) {\n      this.setState({ hoveredCellInfo: hoverInfo });\n    }\n  }\n\n  clustersAddSubscriber(msg, clusters) {\n    this.clusterColMap = fromEntries(clusters.cols.map((cellId, i) => [cellId, i]));\n  }\n\n  render() {\n    const { uuid } = this.props;\n    const { hoveredCellInfo } = this.state;\n    // It is possible that hoveredCellInfo is null if the mouse leaves a cell.\n    if (!hoveredCellInfo || !this.clusterColMap) {\n      return null;\n    }\n    const cellIndex = this.clusterColMap[hoveredCellInfo.cellId];\n    const numCells = Object.keys(this.clusterColMap).length;\n    return (\n      <CellTooltip1DVertical\n        hoveredCellInfo={hoveredCellInfo}\n        cellIndex={cellIndex}\n        numCells={numCells}\n        uuid={uuid}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport CellTooltipText from './CellTooltipText';\n\nexport default function CellTooltip2D(props) {\n  const {\n    hoveredCellInfo,\n    mapping,\n    viewInfo,\n    uuid,\n  } = props;\n  // Check that all data necessary to show the tooltip has been passed.\n  if (!hoveredCellInfo || !viewInfo || !uuid || !viewInfo.viewport || !mapping) {\n    return null;\n  }\n  // Convert the DeckGL coordinates to pixel coordinates.\n  const [x, y] = viewInfo.viewport.project(hoveredCellInfo.mappings[mapping]);\n  // Check if out of bounds.\n  if (x < 0 || x > viewInfo.width || y < 0 || y > viewInfo.height) {\n    return null;\n  }\n  // If we're in the component that triggered the event, do not show the crosshair.\n  // Instead, show a text tooltip.\n  if (hoveredCellInfo.uuid === uuid) {\n    return (\n      <CellTooltipText\n        cellId={hoveredCellInfo.cellId}\n        factors={hoveredCellInfo.factors}\n        x={x}\n        y={y}\n        parentWidth={viewInfo.width}\n        parentHeight={viewInfo.height}\n      />\n    );\n  }\n  const width = 1;\n  // If we're _not_ in the component that triggered the event, show the crosshair.\n  return (\n    <>\n      <div\n        className=\"cell-emphasis-crosshair\"\n        style={{\n          left: `${x - width / 2}px`,\n          top: 0,\n          width: `${width}px`,\n          height: `${viewInfo.height}px`,\n        }}\n      />\n      <div\n        className=\"cell-emphasis-crosshair\"\n        style={{\n          left: 0,\n          top: `${y - width / 2}px`,\n          width: `${viewInfo.width}px`,\n          height: `${width}px`,\n        }}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport PubSub from 'pubsub-js';\n\nimport { CELLS_HOVER, VIEW_INFO } from '../../events';\nimport CellTooltip2D from './CellTooltip2D';\n\nexport default class CellTooltip2DSubscriber extends React.Component {\n  constructor(props) {\n    super(props);\n    const { uuid } = props;\n    this.state = {\n      hoveredCellInfo: null,\n      viewInfo: null,\n    };\n    this.uuid = uuid;\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillMount() {\n    this.cellsHoverToken = PubSub.subscribe(\n      CELLS_HOVER, this.cellsHoverSubscriber.bind(this),\n    );\n    this.viewInfoToken = PubSub.subscribe(\n      VIEW_INFO, this.viewInfoSubscriber.bind(this),\n    );\n  }\n\n  componentWillUnmount() {\n    PubSub.unsubscribe(this.cellsHoverToken);\n    PubSub.unsubscribe(this.viewInfoToken);\n  }\n\n  cellsHoverSubscriber(msg, hoverInfo) {\n    this.setState({ hoveredCellInfo: hoverInfo });\n  }\n\n  viewInfoSubscriber(msg, viewInfo) {\n    const { uuid } = this;\n    // Only use the viewInfo if it corresponds to the view associated with the tooltip.\n    if (viewInfo && viewInfo.uuid && uuid === viewInfo.uuid) {\n      this.setState({ viewInfo });\n    }\n  }\n\n  render() {\n    const { mapping, uuid } = this.props;\n    const { hoveredCellInfo, viewInfo } = this.state;\n    return (\n      <CellTooltip2D\n        hoveredCellInfo={hoveredCellInfo}\n        mapping={mapping}\n        viewInfo={viewInfo}\n        uuid={uuid}\n      />\n    );\n  }\n}\n","import React, { useEffect, useRef } from 'react';\n\nexport default function CellTooltipText(props) {\n  const {\n    cellId,\n    x,\n    y,\n    parentWidth,\n    parentHeight,\n    factors,\n  } = props;\n\n  const ref = useRef(null);\n  const isNarrow = (parentWidth < 300);\n  // Do collision detection based on the bounds of the tooltip ancestor element.\n  useEffect(() => {\n    const el = ref.current;\n    const offsetPercentage = isNarrow ? -5 : 10;\n    const translateX = (x > parentWidth / 2) ? -(100 + offsetPercentage) : offsetPercentage;\n    const translateY = (y > parentHeight / 2) ? -(100 + offsetPercentage) : offsetPercentage;\n    const scale = isNarrow ? 0.75 : 1.0;\n    el.style.transform = `translateX(${translateX}%) translateY(${translateY}%) scale(${scale})`;\n    el.style.whiteSpace = (isNarrow ? 'normal' : 'nowrap');\n  });\n\n  return (\n    <div\n      ref={ref}\n      className=\"cell-tooltip bg-primary\"\n      style={{\n        left: `${x}px`,\n        top: `${y}px`,\n      }}\n    >\n      <table>\n        <tbody>\n          <tr>\n            <th>Cell ID</th>\n            <td>{cellId}</td>\n          </tr>\n          {Object.keys(factors).map(key => (\n            <tr key={key}>\n              <th>{key}</th>\n              <td>{factors[key]}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PubSub from 'pubsub-js';\n\nimport { Checkbox } from 'antd';\nimport { Slider } from '@material-ui/core';\nimport PopoverColor from '../sets/PopoverColor';\n\nimport TitleInfo from '../TitleInfo';\nimport {\n  SLIDERS_CHANGE, RASTER_ADD, COLORS_CHANGE, CHANNEL_VISIBILITY_CHANGE,\n} from '../../events';\n\nconst VIEWER_PALETTE = [\n  [0, 0, 255],\n  [0, 255, 0],\n  [255, 0, 0],\n  [255, 255, 0],\n  [0, 255, 255],\n  [255, 0, 255],\n  [255, 255, 255],\n  [255, 128, 0],\n];\n\nconst STANDARD_MAX = 65535;\n\nexport default function ChannelsSubscriber({ onReady, removeGridComponent }) {\n  const [channelNames, setChannelNames] = useState(null);\n  const [colorValues, setColorValues] = useState(null);\n  const [sliderValues, setSliderValues] = useState(null);\n  const [channelVisibilities, setChannelVisibilities] = useState(null);\n  const [sliderDomains, setSliderDomains] = useState(null);\n  const [sourceId, setSourceId] = useState(null);\n\n  const memoizedOnReady = useCallback(onReady, []);\n\n  useEffect(() => {\n    function handleRasterAdd(msg, raster) {\n      const { domains, id, channelNames: cNames } = raster;\n\n      const initialColorValues = domains.map((_, i) => VIEWER_PALETTE[i]);\n      setColorValues(initialColorValues);\n      PubSub.publish(COLORS_CHANGE(id), initialColorValues);\n\n      const initialSliderValues = domains.map((d) => {\n        const isArray = Array.isArray(d);\n        return isArray ? [d[0], Math.ceil(d[1] / 5)] : [0, Math.ceil(STANDARD_MAX / 5)];\n      });\n      // \"5\" is arbitrary, but the data tends to be left-skewed.\n      // Eventually we want this to be based on the data in the image.));\n      setSliderValues(initialSliderValues);\n      PubSub.publish(SLIDERS_CHANGE(id), initialSliderValues);\n\n      const initialChannelVisibilities = Array(domains.length).fill(true);\n      setChannelVisibilities(initialChannelVisibilities);\n      PubSub.publish(CHANNEL_VISIBILITY_CHANGE(id), initialChannelVisibilities);\n\n\n      setChannelNames(cNames);\n      setSliderDomains(domains.map(d => (Array.isArray(d) ? d : [0, STANDARD_MAX])));\n      setSourceId(id);\n    }\n    memoizedOnReady();\n    const token = PubSub.subscribe(RASTER_ADD, handleRasterAdd);\n    return () => PubSub.unsubscribe(token);\n  }, [memoizedOnReady]);\n\n  const handleColorChange = (i, rgb) => {\n    setColorValues((prevColorValues) => {\n      const nextColorValues = [...prevColorValues];\n      nextColorValues[i] = rgb;\n      PubSub.publish(COLORS_CHANGE(sourceId), nextColorValues);\n      return nextColorValues;\n    });\n  };\n\n  const handleSliderChange = (i, sliderValue) => {\n    setSliderValues((prevSliderValues) => {\n      const nextSliderValues = [...prevSliderValues];\n      nextSliderValues[i] = sliderValue;\n      PubSub.publish(SLIDERS_CHANGE(sourceId), nextSliderValues);\n      return nextSliderValues;\n    });\n  };\n\n  const handleChannelVisibilitiesChange = (i) => {\n    setChannelVisibilities((prevChannelVisibilities) => {\n      const nextChannelVisibilities = [...prevChannelVisibilities];\n      nextChannelVisibilities[i] = !nextChannelVisibilities[i];\n      PubSub.publish(CHANNEL_VISIBILITY_CHANGE(sourceId), nextChannelVisibilities);\n      return nextChannelVisibilities;\n    });\n  };\n\n  if (channelNames && colorValues && sliderValues && channelVisibilities && sliderDomains) {\n    const channelSliders = channelNames.map((name, i) => {\n      const colorValue = colorValues[i];\n      const sliderValue = sliderValues[i];\n      const [min, max] = sliderDomains[i];\n      const channelIsVisible = channelVisibilities[i];\n      return (\n        <div key={`container-${name}`}>\n          <div>{name}</div>\n          <div className=\"channel-container\">\n            <Checkbox\n              className=\"channel-checked\"\n              checked={channelIsVisible}\n              onChange={() => handleChannelVisibilitiesChange(i)}\n            />\n            <PopoverColor\n              prefixClass=\"channel\"\n              color={colorValue}\n              setColor={rgb => handleColorChange(i, rgb)}\n              placement=\"left\"\n              palette={VIEWER_PALETTE}\n            />\n            <Slider\n              value={sliderValue}\n              onChange={(e, v) => handleSliderChange(i, v)}\n              valueLabelDisplay=\"auto\"\n              getAriaLabel={() => name}\n              min={min}\n              max={max}\n              style={{ color: `rgb(${colorValue})` }}\n              orientation=\"horizontal\"\n            />\n          </div>\n        </div>\n      );\n    });\n    return (\n      <TitleInfo title=\"Channel Levels\" isScroll removeGridComponent={removeGridComponent}>\n        <div className=\"sliders\">\n          {channelSliders}\n        </div>\n      </TitleInfo>\n    );\n  }\n  return null;\n}\n","export const TOOLTIP_ANCESTOR = 'tooltip-ancestor';\nconst CARD = `card card-body my-2 ${TOOLTIP_ANCESTOR}`;\nexport const BLACK_CARD = `${CARD} bg-secondary`;\nexport const LIGHT_CARD = `${CARD} bg-primary`;\nexport const TITLE_CARD = 'title';\nexport const SCROLL_CARD = `${LIGHT_CARD} scroll`;\n","import React, { useCallback, useEffect } from 'react';\nimport { SelectableTable } from '../selectable-table/index';\n\nexport default function Factors(props) {\n  const {\n    setSelectedFactor,\n    factorsSelected,\n    clearPleaseWait,\n  } = props;\n\n  useEffect(() => {\n    if (clearPleaseWait && factorsSelected) {\n      clearPleaseWait('factors');\n    }\n  }, [clearPleaseWait, factorsSelected]);\n\n  const onChange = useCallback((selection) => {\n    if (selection && selection.name) {\n      setSelectedFactor(selection.name);\n    }\n  }, [setSelectedFactor]);\n\n  const data = Object.entries(factorsSelected).map(\n    ([name, value]) => ({ name, value }),\n  );\n  return (\n    <SelectableTable\n      columns={['name']}\n      data={data}\n      idKey=\"name\"\n      valueKey=\"value\"\n      onChange={onChange}\n      allowUncheck={false}\n      showTableHead={false}\n    />\n  );\n}\n","import React from 'react';\nimport PubSub from 'pubsub-js';\n\nimport Factors from './Factors';\nimport { PALETTE } from '../utils';\n\nimport TitleInfo from '../TitleInfo';\nimport { FACTORS_ADD, CELLS_COLOR, CLEAR_PLEASE_WAIT } from '../../events';\n\nexport default class FactorsSubscriber extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { factors: {} };\n    this.setSelectedFactor = this.setSelectedFactor.bind(this);\n    this.componentWillUnmount = this.componentWillUnmount.bind(this);\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillMount() {\n    this.factorsAddToken = PubSub.subscribe(\n      FACTORS_ADD, this.factorsAddSubscriber.bind(this),\n    );\n  }\n\n  componentDidMount() {\n    const { onReady } = this.props;\n    onReady();\n  }\n\n  componentWillUnmount() {\n    PubSub.unsubscribe(this.factorsAddToken);\n  }\n\n  factorsAddSubscriber(msg, factors) {\n    this.setState({ factors });\n  }\n\n  setSelectedFactor(selectedId) {\n    this.setState({ selectedId });\n    const { factors } = this.state;\n    const cellColors = {};\n\n    const factorColors = {};\n    Object.entries(factors[selectedId].cells).forEach(\n      ([cellId, factorIndex]) => {\n        if (!factorColors[factorIndex]) {\n          const nextColorIndex = Object.keys(factorColors).length;\n          factorColors[factorIndex] = PALETTE[nextColorIndex % PALETTE.length];\n        }\n        cellColors[cellId] = factorColors[factorIndex];\n      },\n    );\n    PubSub.publish(CELLS_COLOR, cellColors);\n  }\n\n  render() {\n    const { factors, selectedId } = this.state;\n    const { removeGridComponent } = this.props;\n    const factorsSelected = {};\n    const factorsKeys = Object.keys(factors);\n    factorsKeys.forEach((factorId) => {\n      factorsSelected[factorId] = factorId === selectedId;\n    });\n    return (\n      <TitleInfo\n        title=\"Factors\"\n        info={`${factorsKeys.length} factors`}\n        isScroll\n        removeGridComponent={removeGridComponent}\n      >\n        <Factors\n          factorsSelected={factorsSelected}\n          setSelectedFactor={this.setSelectedFactor}\n          clearPleaseWait={\n            layerName => PubSub.publish(CLEAR_PLEASE_WAIT, layerName)\n          }\n        />\n      </TitleInfo>\n    );\n  }\n}\n","import React, { useEffect, useCallback } from 'react';\nimport { SelectableTable } from '../selectable-table/index';\n\nexport default function Genes(props) {\n  const {\n    setSelectedGene,\n    genesSelected,\n    clearPleaseWait,\n  } = props;\n\n  useEffect(() => {\n    if (clearPleaseWait && genesSelected) {\n      clearPleaseWait('genes');\n    }\n  }, [clearPleaseWait, genesSelected]);\n\n  const onChange = useCallback((selection) => {\n    if (selection && selection.name) {\n      setSelectedGene(selection.name);\n    }\n  }, [setSelectedGene]);\n\n  const data = Object.entries(genesSelected).sort(\n    (a, b) => a[0].localeCompare(b[0]),\n  ).map(\n    ([name, value]) => ({ name, value }),\n  );\n  return (\n    <SelectableTable\n      columns={['name']}\n      data={data}\n      idKey=\"name\"\n      valueKey=\"value\"\n      onChange={onChange}\n      allowUncheck={false}\n      showTableHead={false}\n    />\n  );\n}\n","import React from 'react';\nimport PubSub from 'pubsub-js';\n\nimport Genes from './Genes';\n\nimport TitleInfo from '../TitleInfo';\nimport { GENES_ADD, CELLS_COLOR, CLEAR_PLEASE_WAIT } from '../../events';\nimport { interpolateColors } from '../utils';\n\nexport default class GenesSubscriber extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { genes: {}, selectedId: null };\n    this.setSelectedGene = this.setSelectedGene.bind(this);\n    this.componentWillUnmount = this.componentWillUnmount.bind(this);\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillMount() {\n    this.genesAddToken = PubSub.subscribe(GENES_ADD, this.genesAddSubscriber.bind(this));\n  }\n\n  componentDidMount() {\n    const { onReady } = this.props;\n    onReady();\n  }\n\n  componentWillUnmount() {\n    PubSub.unsubscribe(this.genesAddToken);\n  }\n\n  genesAddSubscriber(msg, genes) {\n    this.setState({ genes });\n  }\n\n  setSelectedGene(selectedId) {\n    this.setState({ selectedId });\n    const { genes } = this.state;\n    const cellColors = {};\n\n    const { cells, max } = genes[selectedId];\n    Object.entries(cells).forEach(\n      ([cellId, value]) => {\n        cellColors[cellId] = interpolateColors(value / max);\n      },\n    );\n    PubSub.publish(CELLS_COLOR, cellColors);\n  }\n\n  render() {\n    const { genes, selectedId } = this.state;\n    const { removeGridComponent } = this.props;\n    const genesSelected = {};\n    const genesKeys = Object.keys(genes);\n    genesKeys.forEach((geneId) => {\n      genesSelected[geneId] = geneId === selectedId;\n    });\n    return (\n      <TitleInfo\n        title=\"Expression Levels\"\n        info={`${genesKeys.length} genes`}\n        isScroll\n        removeGridComponent={removeGridComponent}\n      >\n        <Genes\n          genesSelected={genesSelected}\n          setSelectedGene={this.setSelectedGene}\n          clearPleaseWait={\n            layerName => PubSub.publish(CLEAR_PLEASE_WAIT, layerName)\n          }\n        />\n      </TitleInfo>\n    );\n  }\n}\n","import React from 'react';\nimport HeatmapDataCanvas from './HeatmapDataCanvas';\nimport HeatmapCellSelectionCanvas from './HeatmapCellSelectionCanvas';\nimport HeatmapCellColorCanvas from './HeatmapCellColorCanvas';\n\nexport default function Heatmap(props) {\n  const {\n    uuid,\n    cells,\n    clusters,\n    selectedCellIds,\n    cellColors,\n    clearPleaseWait,\n    updateCellsHover = (hoverInfo) => {\n      console.warn(`Heatmap updateCellsHover: ${hoverInfo.cellId}`);\n    },\n    updateStatus = (message) => {\n      console.warn(`Heatmap updateStatus: ${message}`);\n    },\n  } = props;\n  if (clearPleaseWait && clusters) {\n    clearPleaseWait('clusters');\n  }\n  return (\n    <>\n      <HeatmapCellColorCanvas\n        uuid={uuid}\n        cells={cells}\n        clusters={clusters}\n        cellColors={cellColors}\n        updateCellsHover={updateCellsHover}\n        updateStatus={updateStatus}\n        height=\"15%\"\n      />\n      <HeatmapCellSelectionCanvas\n        uuid={uuid}\n        cells={cells}\n        clusters={clusters}\n        selectedCellIds={selectedCellIds}\n        updateCellsHover={updateCellsHover}\n        updateStatus={updateStatus}\n        height=\"15%\"\n      />\n      <HeatmapDataCanvas\n        uuid={uuid}\n        cells={cells}\n        clusters={clusters}\n        updateCellsHover={updateCellsHover}\n        updateStatus={updateStatus}\n        height=\"70%\"\n      />\n    </>\n  );\n}\n","import React from 'react';\n\nimport { setImageDataRGBA, getImageRendering, onHeatmapMouseMove } from './utils';\n\n\nfunction hasRequiredProps(props) {\n  return !!props.clusters && !!props.cellColors;\n}\n\nfunction paintCanvas(canvasRef, props) {\n  if (!canvasRef || !hasRequiredProps(props)) {\n    return;\n  }\n  const ctx = canvasRef.getContext('2d');\n\n  const { clusters, cellColors } = props;\n  const width = clusters.cols.length;\n  const height = 1;\n\n  const imageData = ctx.createImageData(width, height);\n  clusters.cols.forEach((cellId, x) => {\n    const offset = x * 4;\n    const cellColor = cellColors[cellId] || [0, 0, 0];\n    setImageDataRGBA(imageData, offset, ...cellColor, 255);\n  });\n  ctx.putImageData(imageData, 0, 0);\n}\n\nexport default function HeatmapCellColorCanvas(props) {\n  const { height } = props;\n  let { clusters } = props;\n  if (!clusters) {\n    clusters = { rows: [], cols: [], matrix: [] };\n  }\n  const imageRendering = getImageRendering();\n  return (\n    <canvas\n      className=\"pixelated\"\n      style={{ height, imageRendering }}\n      ref={c => paintCanvas(c, props)}\n      width={clusters.cols.length}\n      height={1}\n      onMouseMove={e => onHeatmapMouseMove(e, props)}\n    />\n  );\n}\n","import React from 'react';\n\nimport { setImageDataRGBA, getImageRendering, onHeatmapMouseMove } from './utils';\n\nfunction hasRequiredProps(props) {\n  return !!props.clusters && !!props.selectedCellIds;\n}\n\nfunction paintCanvas(canvasRef, props) {\n  if (!canvasRef || !hasRequiredProps(props)) {\n    return;\n  }\n  const ctx = canvasRef.getContext('2d');\n\n  const { clusters, selectedCellIds } = props;\n  const width = clusters.cols.length;\n  const height = 1;\n\n  const imageData = ctx.createImageData(width, height);\n  clusters.cols.forEach((cellId, x) => {\n    const offset = x * 4;\n    const selected = selectedCellIds.has(cellId);\n    setImageDataRGBA(imageData, offset, 128, 128, 128, selected ? 255 : 0);\n  });\n  ctx.putImageData(imageData, 0, 0);\n}\n\nexport default function HeatmapCellSelectionCanvas(props) {\n  const { height } = props;\n  let { clusters } = props;\n  if (!clusters) {\n    clusters = { rows: [], cols: [], matrix: [] };\n  }\n  const imageRendering = getImageRendering();\n  return (\n    <canvas\n      style={{ height, imageRendering }}\n      ref={c => paintCanvas(c, props)}\n      width={clusters.cols.length}\n      height={1}\n      onMouseMove={e => onHeatmapMouseMove(e, props)}\n    />\n  );\n}\n","import React from 'react';\nimport { interpolateColors } from '../utils';\n\nimport { setImageDataRGBA, getImageRendering, onHeatmapMouseMove } from './utils';\n\nfunction hasRequiredProps(props) {\n  return !!props.clusters;\n}\n\nfunction paintCanvas(canvasRef, props) {\n  if (!canvasRef || !hasRequiredProps(props)) {\n    return;\n  }\n  const ctx = canvasRef.getContext('2d');\n\n  const { clusters } = props;\n  const width = clusters.cols.length;\n  const height = clusters.rows.length;\n\n  const imageData = ctx.createImageData(width, height);\n  clusters.matrix.forEach((row, y) => {\n    row.forEach((value, x) => {\n      const offset = (y * width + x) * 4;\n      const rgbTriple = interpolateColors(value);\n      setImageDataRGBA(imageData, offset, ...rgbTriple, 255);\n    });\n  });\n  ctx.putImageData(imageData, 0, 0);\n}\n\nexport default function HeatmapDataCanvas(props) {\n  const { height } = props;\n  let { clusters } = props;\n  if (!clusters) {\n    clusters = { rows: [], cols: [], matrix: [] };\n  }\n  const imageRendering = getImageRendering();\n  return (\n    <canvas\n      style={{ height, imageRendering }}\n      ref={c => paintCanvas(c, props)}\n      width={clusters.cols.length}\n      height={clusters.rows.length}\n      onMouseMove={event => onHeatmapMouseMove(event, props)}\n    />\n  );\n}\n","import React from 'react';\nimport PubSub from 'pubsub-js';\n\nimport TitleInfo from '../TitleInfo';\nimport {\n  CELLS_COLOR, CLUSTERS_ADD, CELLS_ADD, CELLS_SELECTION,\n  CLEAR_PLEASE_WAIT, CELLS_HOVER, STATUS_INFO, CELL_SETS_VIEW,\n} from '../../events';\nimport Heatmap from './Heatmap';\n\nexport default class HeatmapSubscriber extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cells: {}, clusters: null, selectedCellIds: new Set(), cellColors: null,\n    };\n    this.componentWillUnmount = this.componentWillUnmount.bind(this);\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillMount() {\n    this.clustersAddToken = PubSub.subscribe(\n      CLUSTERS_ADD, this.clustersAddSubscriber.bind(this),\n    );\n    this.cellsAddToken = PubSub.subscribe(\n      CELLS_ADD, this.cellsAddSubscriber.bind(this),\n    );\n    this.cellsColorToken = PubSub.subscribe(\n      CELLS_COLOR, this.cellsColorSubscriber.bind(this),\n    );\n    this.cellsSelectionToken = PubSub.subscribe(\n      CELLS_SELECTION, this.cellsSelectionSubscriber.bind(this),\n    );\n    this.cellSetsViewToken = PubSub.subscribe(\n      CELL_SETS_VIEW, this.cellsSelectionSubscriber.bind(this),\n    );\n  }\n\n  componentDidMount() {\n    const { onReady } = this.props;\n    onReady();\n  }\n\n  componentWillUnmount() {\n    PubSub.unsubscribe(this.clustersAddToken);\n    PubSub.unsubscribe(this.cellsAddToken);\n    PubSub.unsubscribe(this.cellsColorToken);\n    PubSub.unsubscribe(this.cellsSelectionToken);\n    PubSub.unsubscribe(this.cellSetsViewToken);\n  }\n\n  clustersAddSubscriber(msg, clusters) {\n    this.setState({ clusters });\n  }\n\n  cellsAddSubscriber(msg, cells) {\n    this.setState({ cells });\n  }\n\n  cellsSelectionSubscriber(msg, cellIds) {\n    this.setState({ selectedCellIds: cellIds });\n  }\n\n  cellsColorSubscriber(msg, cellColors) {\n    this.setState({ cellColors });\n  }\n\n  render() {\n    const {\n      cells, clusters, selectedCellIds, cellColors,\n    } = this.state;\n    const cellsCount = clusters ? clusters.cols.length : 0;\n    const genesCount = clusters ? clusters.rows.length : 0;\n    const selectedCount = selectedCellIds ? selectedCellIds.size : 0;\n    const { children, uuid, removeGridComponent } = this.props;\n    return (\n      <TitleInfo\n        title=\"Heatmap\"\n        info={`${cellsCount} cells × ${genesCount} genes,\n               with ${selectedCount} cells selected`}\n        removeGridComponent={removeGridComponent}\n      >\n        {children}\n        <Heatmap\n          uuid={uuid}\n          cells={cells}\n          clusters={clusters}\n          selectedCellIds={selectedCellIds}\n          cellColors={cellColors}\n          updateCellsHover={hoverInfo => PubSub.publish(CELLS_HOVER, hoverInfo)}\n          updateStatus={message => PubSub.publish(STATUS_INFO, message)}\n          clearPleaseWait={\n            layerName => PubSub.publish(CLEAR_PLEASE_WAIT, layerName)\n          }\n        />\n      </TitleInfo>\n    );\n  }\n}\n","import React from 'react';\nimport uuidv4 from 'uuid/v4';\n\nimport HeatmapSubscriber from './HeatmapSubscriber';\nimport CellTooltip1DVerticalSubscriber from '../cell-tooltip/CellTooltip1DVerticalSubscriber';\n\nexport default function HoverableHeatmapSubscriber(props) {\n  // Create a UUID so that hover events\n  // know from which element they were generated.\n  const uuid = uuidv4();\n  return (\n    <HeatmapSubscriber {...props} uuid={uuid}>\n      <CellTooltip1DVerticalSubscriber {...props} uuid={uuid} />\n    </HeatmapSubscriber>\n  );\n}\n","import { makeCellStatusMessage } from '../utils';\n\nexport function setImageDataRGBA(imageData, offset, r, g, b, a) {\n  /* eslint-disable no-param-reassign */\n  imageData.data[offset + 0] = r;\n  imageData.data[offset + 1] = g;\n  imageData.data[offset + 2] = b;\n  imageData.data[offset + 3] = a;\n  /* eslint-enable */\n}\n\nexport function getImageRendering() {\n  return /Chrome/.test(navigator.userAgent) ? 'pixelated' : 'crisp-edges';\n}\n\nexport function onHeatmapMouseMove(event, props) {\n  const {\n    uuid,\n    cells,\n    clusters,\n    updateCellsHover = (hoverInfo) => {\n      console.warn(`onHeatmapMouseMove updateCellsHover: ${hoverInfo.cellId}`);\n    },\n    updateStatus = (message) => {\n      console.warn(`onHeatmapMouseMove updateStatus: ${message}`);\n    },\n  } = props;\n  // Compute x position relative to the canvas.\n  const rect = event.target.getBoundingClientRect();\n  const pixelX = (event.clientX - rect.left);\n  const { width } = rect;\n  // Cell columns are not exactly equal to individual pixels,\n  // so need to scale by number of cells.\n  const colX = Math.floor((pixelX / width) * clusters.cols.length);\n  // Use the column x-coordinate to look up the cell ID.\n  const cellId = clusters.cols[colX];\n  if (cellId) {\n    // Use the cell ID to look up the cell information object.\n    const cellInfo = cells[cellId];\n    const { factors = {}, xy, mappings = {} } = cellInfo;\n    updateCellsHover({\n      cellId,\n      mappings: { xy, ...mappings },\n      uuid,\n      factors,\n    });\n    updateStatus(makeCellStatusMessage(factors));\n  }\n}\n","import React from 'react';\nimport uuidv4 from 'uuid/v4';\n\nimport ScatterplotSubscriber from './ScatterplotSubscriber';\nimport CellTooltip2DSubscriber from '../cell-tooltip/CellTooltip2DSubscriber';\n\nexport default function HoverableScatterplotSubscriber(props) {\n  // Create a UUID so that hover events\n  // know from which DeckGL element they were generated.\n  const uuid = uuidv4();\n  return (\n    <ScatterplotSubscriber {...props} uuid={uuid}>\n      <CellTooltip2DSubscriber {...props} uuid={uuid} />\n    </ScatterplotSubscriber>\n  );\n}\n","import { SelectableScatterplotLayer } from '../../layers';\nimport { cellLayerDefaultProps, DEFAULT_COLOR } from '../utils';\nimport AbstractSelectableComponent from '../AbstractSelectableComponent';\n\n/**\nReact component which renders a scatterplot from cell data, typically tSNE or PCA.\n*/\nexport default class Scatterplot extends AbstractSelectableComponent {\n  static defaultProps = {\n    clearPleaseWait: (layer) => { console.warn(`\"clearPleaseWait\" not provided; layer: ${layer}`); },\n  };\n\n  // These are called from superclass, so they need to belong to instance, I think.\n  // eslint-disable-next-line class-methods-use-this\n  getInitialViewState() {\n    return this.props.view || {\n      zoom: 2,\n      target: [0, 0, 0], // Required: https://github.com/uber/deck.gl/issues/2580\n    };\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getCellCoords(cell) {\n    return cell.mappings[this.props.mapping];\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getCellBaseLayerId() {\n    return 'base-scatterplot';\n  }\n\n  renderLayers() {\n    const {\n      cells = undefined,\n      mapping,\n      updateStatus = (message) => {\n        console.warn(`Scatterplot updateStatus: ${message}`);\n      },\n      updateCellsSelection = (cellsSelection) => {\n        console.warn(`Scatterplot updateCellsSelection: ${cellsSelection}`);\n      },\n      updateCellsHover = (hoverInfo) => {\n        console.warn(`Scatterplot updateCellsHover: ${hoverInfo.cellId}`);\n      },\n      selectedCellIds = new Set(),\n      uuid = null,\n      clearPleaseWait,\n    } = this.props;\n\n    const { tool } = this.state;\n\n    const layers = [];\n    if (cells) {\n      clearPleaseWait('cells');\n      layers.push(\n        new SelectableScatterplotLayer({\n          id: 'scatterplot',\n          isSelected: cellEntry => (\n            selectedCellIds.size\n              ? selectedCellIds.has(cellEntry[0])\n              : true // If nothing is selected, everything is selected.\n          ),\n          // No radiusMin, so texture remains open even zooming out.\n          radiusMaxPixels: 1,\n          getPosition: (cellEntry) => {\n            const { mappings } = cellEntry[1];\n            if (!(mapping in mappings)) {\n              const available = Object.keys(mappings).map(s => `\"${s}\"`).join(', ');\n              throw new Error(`Expected to find \"${mapping}\", but available mappings are: ${available}`);\n            }\n            const mappedCell = mappings[mapping];\n            return [mappedCell[0], mappedCell[1], 0];\n          },\n          getColor: cellEntry => (\n            (this.props.cellColors && this.props.cellColors[cellEntry[0]]) || DEFAULT_COLOR\n          ),\n          onClick: (info) => {\n            if (tool) {\n              // If using a tool, prevent individual cell selection.\n              // Let SelectionLayer handle the clicks instead.\n              return;\n            }\n            const cellId = info.object[0];\n            if (selectedCellIds.has(cellId)) {\n              selectedCellIds.delete(cellId);\n              updateCellsSelection(selectedCellIds);\n            } else {\n              selectedCellIds.add(cellId);\n              updateCellsSelection(selectedCellIds);\n            }\n          },\n          ...cellLayerDefaultProps(Object.entries(cells), updateStatus, updateCellsHover, uuid),\n        }),\n      );\n    }\n\n    return layers;\n  }\n}\n","import React from 'react';\nimport PubSub from 'pubsub-js';\n\nimport TitleInfo from '../TitleInfo';\nimport {\n  CELLS_ADD, CELLS_COLOR, CELLS_HOVER, STATUS_INFO, VIEW_INFO, CELLS_SELECTION,\n  CELL_SETS_VIEW, CLEAR_PLEASE_WAIT,\n} from '../../events';\nimport Scatterplot from './Scatterplot';\n\n\nexport default class ScatterplotSubscriber extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cells: {}, selectedCellIds: new Set(), cellColors: null,\n    };\n    this.componentWillUnmount = this.componentWillUnmount.bind(this);\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillMount() {\n    this.cellsAddToken = PubSub.subscribe(\n      CELLS_ADD, this.cellsAddSubscriber.bind(this),\n    );\n    this.cellsColorToken = PubSub.subscribe(\n      CELLS_COLOR, this.cellsColorSubscriber.bind(this),\n    );\n    this.cellsSelectionToken = PubSub.subscribe(\n      CELLS_SELECTION, this.cellsSelectionSubscriber.bind(this),\n    );\n    this.cellSetsViewToken = PubSub.subscribe(\n      CELL_SETS_VIEW, this.cellsSelectionSubscriber.bind(this),\n    );\n  }\n\n  componentDidMount() {\n    const { onReady } = this.props;\n    onReady();\n  }\n\n  componentWillUnmount() {\n    PubSub.unsubscribe(this.cellsAddToken);\n    PubSub.unsubscribe(this.cellsColorToken);\n    PubSub.unsubscribe(this.cellsSelectionToken);\n    PubSub.unsubscribe(this.cellSetsViewToken);\n  }\n\n  cellsSelectionSubscriber(msg, cellIds) {\n    this.setState({ selectedCellIds: cellIds });\n  }\n\n  cellsColorSubscriber(msg, cellColors) {\n    this.setState({ cellColors });\n  }\n\n  cellsAddSubscriber(msg, cells) {\n    this.setState({ cells });\n  }\n\n  render() {\n    const {\n      cells, selectedCellIds, cellColors,\n    } = this.state;\n    const {\n      mapping, uuid = null, children, view, removeGridComponent,\n    } = this.props;\n    const cellsCount = Object.keys(cells).length;\n    return (\n      <TitleInfo\n        title={`Scatterplot (${mapping})`}\n        info={`${cellsCount} cells`}\n        removeGridComponent={removeGridComponent}\n      >\n        {children}\n        <Scatterplot\n          uuid={uuid}\n          view={view}\n          cells={cells}\n          mapping={mapping}\n          selectedCellIds={selectedCellIds}\n          cellColors={cellColors}\n          updateStatus={message => PubSub.publish(STATUS_INFO, message)}\n          updateCellsSelection={selectedIds => PubSub.publish(CELLS_SELECTION, selectedIds)}\n          updateCellsHover={hoverInfo => PubSub.publish(CELLS_HOVER, hoverInfo)}\n          updateViewInfo={viewInfo => PubSub.publish(VIEW_INFO, viewInfo)}\n          clearPleaseWait={\n            layerName => PubSub.publish(CLEAR_PLEASE_WAIT, layerName)\n          }\n        />\n      </TitleInfo>\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useCallback, useState } from 'react';\nimport uuidv4 from 'uuid/v4';\nimport union from 'lodash/union';\nimport difference from 'lodash/difference';\nimport isEqual from 'lodash/isEqual';\n\n/**\n * A table with \"selectable\" rows.\n * @prop {string[]} columns An array of column names, corresponding to data object properties.\n * @prop {object[]} data An array of data objects used to populate table rows.\n * @prop {function} onChange Callback function,\n * passed a selection object when `allowMultiple` is false (and `null` if `allowUncheck` is true),\n * or passed an array of selection objects when `allowMultiple` is true.\n * @prop {string} idKey The key for a unique identifier property of `data` objects.\n * @prop {string} valueKey If initially-selected rows are required,\n * this key specifies a boolean property of the `data` objects\n * indicating those rows that should be initially selected.\n * @prop {boolean} allowMultiple Whether to allow multiple rows to be selected. By default, false.\n * @prop {boolean} allowUncheck Whether to allow selected rows to be un-checked. By default, false.\n * @prop {boolean} showTableHead Whether to show the table header element. By default, true.\n * @prop {boolean} showTableInputs Whether to show the table input elements for each row.\n * By default, false.\n */\nexport default function SelectableTable(props) {\n  const {\n    columns,\n    data,\n    onChange,\n    idKey = 'id',\n    valueKey = 'value',\n    allowMultiple = false,\n    allowUncheck = false,\n    showTableHead = true,\n    showTableInputs = false,\n  } = props;\n\n  const [selectedRows, setSelectedRows] = useState(null);\n\n  // Callback function to update the `selectedRows` state.\n  const onSelectRow = useCallback((value, checked) => {\n    if (checked || allowUncheck) {\n      if (!allowMultiple) {\n        setSelectedRows(checked ? [value] : []);\n      } else {\n        setSelectedRows(\n          checked\n            ? union(selectedRows || [], [value])\n            : difference(selectedRows || [], [value]),\n        );\n      }\n    }\n  }, [allowMultiple, allowUncheck, selectedRows]);\n\n  // Handler for checkbox input elements.\n  const handleInputChange = useCallback((event) => {\n    const { target } = event;\n    const { checked } = target;\n    const { value } = target;\n    onSelectRow(value, checked);\n  }, [onSelectRow]);\n\n  // Function to map row IDs to corresponding objects\n  // to pass to the `onChange` callback.\n  const getDataFromIds = useCallback(ids => ids.map(id => ({\n    [idKey]: id,\n    data: data.find(item => item[idKey] === id),\n  })), [data, idKey]);\n\n  // Function to check if a row ID has been selected.\n  const isSelected = useCallback(id => (\n    Array.isArray(selectedRows) && selectedRows.includes(id)\n  ), [selectedRows]);\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    // Check whether an initial set of rows should be selected.\n    const initialSelectedRows = data\n      .map((d) => {\n        if (d[valueKey]) {\n          return d[idKey];\n        }\n        return null;\n      })\n      .filter(Boolean);\n    if (initialSelectedRows.length > 0 && !isEqual(initialSelectedRows, selectedRows)) {\n      setSelectedRows(initialSelectedRows);\n    }\n  }, [data, idKey, valueKey]);\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    // Call the `onChange` prop function with an updated row or set of rows.\n    if (!onChange || !selectedRows) {\n      return;\n    }\n    const selectedRowData = getDataFromIds(selectedRows);\n    if (allowMultiple) {\n      onChange(selectedRowData);\n    } else if (selectedRows.length === 1) {\n      onChange(selectedRowData[0]);\n    } else if (selectedRows.length === 0) {\n      onChange(null);\n    }\n  }, [selectedRows]);\n\n  // Generate a unique ID to use in (for, id) label-input pairs.\n  const inputUuid = uuidv4();\n\n  // Class for first column of inputs, to hide them if desired.\n  const hiddenInputsClass = (showTableInputs ? '' : 'hidden-input-column');\n\n  return (\n    <div className=\"selectable-table\">\n      <table>\n        {showTableHead ? (\n          <thead>\n            <tr>\n              <th className={hiddenInputsClass} />\n              {columns.map(column => (\n                <th key={column}>{column}</th>\n              ))}\n            </tr>\n          </thead>\n        ) : null}\n        <tbody>\n          {data.map(item => (\n            <tr\n              key={item[idKey]}\n              className={(isSelected(item[idKey]) ? 'row-checked' : '')}\n            >\n              <td className={`input-container ${hiddenInputsClass}`}>\n                <label htmlFor={`${inputUuid}_${item[idKey]}`}>\n                  <input\n                    id={`${inputUuid}_${item[idKey]}`}\n                    type=\"checkbox\"\n                    className={(allowMultiple ? 'checkbox' : 'radio')}\n                    name={inputUuid}\n                    value={item[idKey]}\n                    onChange={handleInputChange}\n                    checked={isSelected(item[idKey])}\n                  />\n                </label>\n              </td>\n              {columns.map(column => (\n                <td\n                  key={column}\n                  role=\"button\"\n                  onClick={() => onSelectRow(item[idKey], !isSelected(item[idKey]))}\n                >\n                  {item[column]}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","export { default as SelectableTable } from './SelectableTable';\n","import React from 'react';\nimport PubSub from 'pubsub-js';\nimport {\n  CELL_SETS_MODIFY, CELL_SETS_VIEW, CELLS_SELECTION,\n  CELLS_ADD, STATUS_WARN, CELLS_COLOR,\n} from '../../events';\nimport SetsManager from './SetsManager';\nimport TitleInfo from '../TitleInfo';\nimport SetsTree from './sets';\n\nconst setsType = 'cell';\n\nexport default class CellSetsManagerSubscriber extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cellSets: new SetsTree(\n        (obj) => {\n          PubSub.publish(CELL_SETS_MODIFY, obj);\n        },\n        (cellIds, cellColors) => {\n          PubSub.publish(CELLS_COLOR, cellColors);\n          PubSub.publish(CELL_SETS_VIEW, cellIds);\n        },\n      ),\n    };\n    this.componentWillUnmount = this.componentWillUnmount.bind(this);\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillMount() {\n    this.cellsAddToken = PubSub.subscribe(\n      CELLS_ADD, this.cellsAddSubscriber.bind(this),\n    );\n    this.cellSetsToken = PubSub.subscribe(\n      CELL_SETS_MODIFY, this.cellSetsSubscriber.bind(this),\n    );\n    this.cellsSelectionToken = PubSub.subscribe(\n      CELLS_SELECTION, this.cellsSelectionSubscriber.bind(this),\n    );\n  }\n\n  componentDidMount() {\n    const { onReady } = this.props;\n    onReady();\n  }\n\n  componentWillUnmount() {\n    PubSub.unsubscribe(this.cellsAddToken);\n    PubSub.unsubscribe(this.cellSetsToken);\n    PubSub.unsubscribe(this.cellsSelectionToken);\n  }\n\n  cellsAddSubscriber(msg, cells) {\n    const { cellSets } = this.state;\n    cellSets.setItems(Object.keys(cells));\n  }\n\n  cellSetsSubscriber(msg, cellSets) {\n    this.setState({ cellSets });\n  }\n\n  cellsSelectionSubscriber(msg, cellIds) {\n    const { cellSets } = this.state;\n    cellSets.setCurrentSet(cellIds, true);\n  }\n\n  render() {\n    const { cellSets, gridResizeEvent } = this.state;\n    const { datasetId, removeGridComponent } = this.props;\n    return (\n      <TitleInfo\n        title=\"Cell Sets\"\n        isScroll\n        removeGridComponent={removeGridComponent}\n      >\n        <SetsManager\n          setsTree={cellSets}\n          datasetId={datasetId}\n          setsType={setsType}\n          onError={err => PubSub.publish(STATUS_WARN, err)}\n          gridResizeEvent={gridResizeEvent}\n        />\n      </TitleInfo>\n    );\n  }\n}\n","import React, { useRef, useCallback } from 'react';\nimport { Popover } from 'antd';\nimport 'antd/es/popover/style/index.css';\n\n/**\n * This is a small wrapper around the Popover component from the antd library,\n * which is required to be able to apply theme styles to the popover.\n * This is because the default `getPopupContainer` function used by antd\n * just returns `document.body` (see https://ant.design/components/tooltip/#API),\n * but theme styles are applied using a sibling class on `.vitessce-container`\n * (which is a child of `body`).\n * https://github.com/hubmapconsortium/vitessce/pull/494#discussion_r395957914\n * @param {*} props Props are passed through to the <Popover/> from the antd library.\n */\nexport default function VitesscePopover(props) {\n  const spanRef = useRef();\n\n  const getPopupContainer = useCallback(() => {\n    if (spanRef.current) {\n      return spanRef.current.closest('.vitessce-container');\n    }\n    return null;\n  }, [spanRef]);\n\n  return (\n    <>\n      <span ref={spanRef} />\n      {spanRef.current ? (\n        <Popover\n          getPopupContainer={getPopupContainer}\n          overlayClassName=\"vitessce-popover\"\n          {...props}\n        />\n      ) : null}\n    </>\n  );\n}\n","import React from 'react';\nimport tinycolor from 'tinycolor2';\nimport { TwitterPicker } from 'react-color';\nimport { PALETTE } from '../utils';\nimport Popover from './Popover';\n\nfunction toHexString(rgbArray) {\n  return tinycolor({ r: rgbArray[0], g: rgbArray[1], b: rgbArray[2] }).toHexString();\n}\n\nexport default function PopoverColor(props) {\n  const {\n    prefixClass, placement, color, setColor, palette,\n  } = props;\n\n  function handleChangeComplete({ rgb }) {\n    if (!rgb) {\n      return;\n    }\n    setColor([rgb.r, rgb.g, rgb.b]);\n  }\n\n  const presetColors = (palette && palette.map(toHexString)) || PALETTE.map(toHexString);\n\n  return (\n    <Popover\n      content={(\n        <TwitterPicker\n          className=\"popover-color\"\n          disableAlpha\n          width={130}\n          triangle=\"hide\"\n          colors={presetColors}\n          color={toHexString(color)}\n          onChangeComplete={handleChangeComplete}\n        />\n      )}\n      placement={placement}\n      trigger=\"click\"\n      mouseEnterDelay={0}\n      mouseLeaveDelay={0}\n    >\n      <span\n        className={`${prefixClass}-set-color`}\n        style={{ backgroundColor: toHexString(color) }}\n      />\n    </Popover>\n  );\n}\n","import React, { useState } from 'react';\nimport { callbackOnKeyPress } from './utils';\nimport Popover from './Popover';\n\nfunction PopoverMenuList(props) {\n  const { menuConfig, onClick } = props;\n\n  return (\n    <ul className=\"popover-menu-list\">\n      {menuConfig.map(item => (\n        <li key={item.name}>\n          <button\n            title={item.name}\n            type=\"button\"\n            onClick={() => {\n              onClick();\n              item.handler();\n            }}\n            onKeyPress={e => callbackOnKeyPress(e, item.handlerKey, () => {\n              onClick();\n              item.handler();\n            })}\n          >{item.name}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default function PopoverMenu(props) {\n  const {\n    menuConfig, placement, children, onClose,\n  } = props;\n\n  const [visible, setVisible] = useState(false);\n\n  function closePopover() {\n    setVisible(false);\n    if (onClose) {\n      onClose();\n    }\n  }\n\n  return (\n    <Popover\n      content={<PopoverMenuList menuConfig={menuConfig} onClick={closePopover} />}\n      placement={placement}\n      trigger=\"click\"\n      mouseEnterDelay={0}\n      mouseLeaveDelay={0}\n      visible={visible}\n      onVisibleChange={(v) => { setVisible(v); }}\n    >\n      {children}\n    </Popover>\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport SetsManagerTab from './SetsManagerTab';\nimport SetsManagerActionBar from './SetsManagerActionBar';\nimport 'antd/es/tabs/style/index.css';\n\nconst { TabPane } = Tabs;\n\nexport default function SetsManager(props) {\n  const { setsTree } = props;\n\n  function onEdit(key, action) {\n    if (action === 'remove') {\n      setsTree.closeTab(key);\n    }\n  }\n\n  return (\n    <div className=\"sets-manager\">\n      <Tabs type=\"editable-card\" onEdit={onEdit}>\n        {setsTree.tabRoots.map(tabRoot => (\n          <TabPane tab={tabRoot.name} key={tabRoot.setKey}>\n            <SetsManagerTab setsTree={setsTree} tabRoot={tabRoot} />\n          </TabPane>\n        ))}\n      </Tabs>\n\n      <SetsManagerActionBar {...props} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Icon } from 'antd';\nimport 'antd/es/icon/style/index.css';\nimport PopoverMenu from './PopoverMenu';\nimport { ReactComponent as SetUnionSVG } from '../../assets/sets/union.svg';\nimport { ReactComponent as SetIntersectionSVG } from '../../assets/sets/intersection.svg';\nimport { ReactComponent as SetComplementSVG } from '../../assets/sets/complement.svg';\n\nimport {\n  tabularFileType, tabularFileExtension,\n  handleImportTabular, handleImportJSON,\n  handleExportTabular, handleExportJSON,\n} from './io';\n\nexport default function SetsManagerActionBar(props) {\n  const {\n    setsTree, datasetId, setsType,\n    onError = (err) => {\n      console.warn(`SetsManagerActionBar onError: ${err}`);\n      // NOTE: Because this is used in the non-pubsub SetsManager,\n      // it would be inappropriate to use our STATUS_WARN event as the default here.\n      // If we were to need that integration, a callback needs to be passed in as a prop.\n    },\n  } = props;\n\n  /**\n   * Perform the union set operation, updating the current set.\n   */\n  function onUnion() {\n    const checkedUnion = setsTree.getUnion(setsTree.checkedKeys);\n    setsTree.setCurrentSet(checkedUnion, true, 'Current union');\n    setsTree.emitVisibilityUpdate();\n  }\n\n  /**\n   * Perform the intersection set operation, updating the current set.\n   */\n  function onIntersection() {\n    const checkedIntersection = setsTree.getIntersection(setsTree.checkedKeys);\n    setsTree.setCurrentSet(checkedIntersection, true, 'Current intersection');\n    setsTree.emitVisibilityUpdate();\n  }\n\n  /**\n   * Perform the complement set operation, updating the current set.\n   */\n  function onComplement() {\n    const checkedComplement = setsTree.getComplement(setsTree.checkedKeys);\n    setsTree.setCurrentSet(checkedComplement, true, 'Current complement');\n    setsTree.emitVisibilityUpdate();\n  }\n\n  /**\n   * Import a file, then process the imported data via the supplied handler function.\n   * @param {Function} importHandler The function to process the imported data.\n   * @param {string} mimeType The accepted mime type for the file upload input.\n   * @returns {Function} An onImport function corresponding to the supplied parameters.\n   */\n  function onImport(importHandler, mimeType) {\n    return () => {\n      const uploadInputNode = document.createElement('input');\n      uploadInputNode.setAttribute('type', 'file');\n      uploadInputNode.setAttribute('accept', mimeType);\n      document.body.appendChild(uploadInputNode); // required for firefox\n      uploadInputNode.click();\n      uploadInputNode.addEventListener('change', (event) => {\n        if (!(window.File && window.FileReader && window.FileList && window.Blob)) {\n          onError('Local file reading APIs are not fully supported in this browser.');\n          return;\n        }\n        const { files } = event.target;\n        if (!files || files.length !== 1) {\n          onError('Incorrect number of files selected.');\n          return;\n        }\n        const reader = new FileReader();\n        reader.addEventListener('load', () => {\n          const { result } = reader;\n          try {\n            importHandler(props, result);\n          } catch (e) {\n            onError(e.message);\n          }\n        }, false);\n        reader.readAsText(files[0]);\n      });\n      uploadInputNode.remove();\n    };\n  }\n\n  /**\n   * Downloads a file from the browser.\n   * @param {string} exportHandler The function that converts the data to a string.\n   * @param {string} fileExtension The extension of the file to be downloaded.\n   */\n  function onExport(exportHandler, fileExtension) {\n    return () => {\n      const dataString = exportHandler(props);\n      const fileName = `${datasetId}-${setsType}-sets.${fileExtension}`;\n      const downloadAnchorNode = document.createElement('a');\n      downloadAnchorNode.setAttribute('href', dataString);\n      downloadAnchorNode.setAttribute('download', fileName);\n      document.body.appendChild(downloadAnchorNode); // required for firefox\n      downloadAnchorNode.click();\n      downloadAnchorNode.remove();\n    };\n  }\n\n  return (\n    <div className=\"sets-manager-icon-bar\">\n      <Icon\n        component={SetUnionSVG}\n        title=\"New set from union of checked sets\"\n        onClick={onUnion}\n      />\n      <Icon\n        component={SetIntersectionSVG}\n        title=\"New set from intersection of checked sets\"\n        onClick={onIntersection}\n      />\n      <Icon\n        component={SetComplementSVG}\n        title=\"New set from complement of checked sets\"\n        onClick={onComplement}\n      />\n      <PopoverMenu\n        placement=\"bottom\"\n        menuConfig={[{\n          name: `Import ${tabularFileType}`,\n          handler: onImport(handleImportTabular, `text/${tabularFileExtension}`),\n        }, {\n          name: 'Import JSON',\n          handler: onImport(handleImportJSON, 'application/json'),\n        }, {\n          name: `Export ${tabularFileType}`,\n          handler: onExport(handleExportTabular, tabularFileExtension),\n        }, {\n          name: 'Export JSON',\n          handler: onExport(handleExportJSON, 'json'),\n        }]}\n      >\n        <Icon type=\"more\" />\n      </PopoverMenu>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Tree } from 'antd';\nimport TreeNode from './TreeNode';\nimport 'antd/es/tree/style/index.css';\n\nexport default class SetsManagerTab extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expandedKeys: [],\n      autoExpandParent: true,\n    };\n\n    this.onCheck = this.onCheck.bind(this);\n    this.onExpand = this.onExpand.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  onExpand(expandedKeys) {\n    // We want autoExpandParent to be initially true so that we see the whole tree.\n    // But, when autoExpandParent is set to true, a parent cannot be collapsed\n    // if there are expanded children.\n    // So upon an expansion interaction, we always want autoExpandParent to be false\n    // to allow a parent with expanded children to collapse.\n    this.setState({\n      expandedKeys,\n      autoExpandParent: false,\n    });\n  }\n\n  onCheck(checkedKeys) {\n    const { setsTree } = this.props;\n    setsTree.setCheckedKeys(checkedKeys);\n  }\n\n  onDrop(info) {\n    const {\n      setsTree,\n      tabRoot,\n    } = this.props;\n\n    const { eventKey: dropKey } = info.node.props;\n    const { eventKey: dragKey } = info.dragNode.props;\n    const { dropToGap, dropPosition } = info;\n\n    // Update the tree based on the drag event.\n    setsTree.dragRearrange(tabRoot, dropKey, dragKey, dropPosition, dropToGap);\n  }\n\n  renderTreeNodes(nodes) {\n    if (!nodes) {\n      return null;\n    }\n    const { setsTree } = this.props;\n    return nodes.map(item => (\n      <TreeNode key={item.setKey} tree={setsTree} {...item.getRenderProps()}>\n        {this.renderTreeNodes(item.children)}\n      </TreeNode>\n    ));\n  }\n\n  render() {\n    const {\n      setsTree,\n      tabRoot,\n    } = this.props;\n\n    const {\n      expandedKeys,\n      autoExpandParent,\n    } = this.state;\n\n    return (\n      <div className=\"sets-manager-tab\">\n        <Tree\n          draggable\n          checkable\n          blockNode\n          onExpand={this.onExpand}\n          expandedKeys={expandedKeys}\n          autoExpandParent={autoExpandParent}\n          onCheck={this.onCheck}\n          checkedKeys={setsTree.checkedKeys}\n          onDrop={this.onDrop}\n        >\n          {this.renderTreeNodes(tabRoot.children)}\n        </Tree>\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { Icon } from 'antd';\nimport { TreeNode as RcTreeNode } from 'rc-tree';\nimport { getDataAndAria } from 'rc-tree/es/util';\nimport classNames from 'classnames';\nimport PopoverMenu from './PopoverMenu';\nimport PopoverColor from './PopoverColor';\nimport { callbackOnKeyPress, range, levelNameFromIndex } from './utils';\n\nimport { ReactComponent as EyeSVG } from '../../assets/tools/eye.svg';\nimport { ReactComponent as PenSVG } from '../../assets/tools/pen.svg';\nimport { ReactComponent as TrashSVG } from '../../assets/tools/trash.svg';\n\nfunction makeNodeViewMenuConfig(props) {\n  const {\n    tree,\n    setKey,\n    level,\n  } = props;\n\n  return [\n    {\n      name: 'View',\n      handler: () => tree.viewSet(setKey),\n      handlerKey: 'v',\n    },\n    // Show view buttons for viewing descendants at each level.\n    ...range(level).map(i => (\n      {\n        name: `View ${levelNameFromIndex(i)}`,\n        handler: () => tree.viewSetDescendants(setKey, i),\n        handlerKey: `${i}`,\n      }\n    )),\n    // Show new tab button if not a leaf node.\n    ...(level > 0 ? [{\n      name: 'Open in new tab',\n      handler: () => tree.newTab(setKey),\n      handlerKey: 't',\n    }] : []),\n  ];\n}\n\nfunction NamedSetNodeStatic(props) {\n  const {\n    title,\n    prefixClass,\n    tree,\n    setKey,\n  } = props;\n  const [iconsVisible, setIconsVisible] = useState(false);\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={() => { tree.viewSet(setKey); }}\n        onKeyPress={e => callbackOnKeyPress(e, 'v', () => tree.viewSet(setKey))}\n        onMouseMove={() => setIconsVisible(true)}\n        onMouseLeave={() => setIconsVisible(false)}\n        className={`${prefixClass}-title`}\n        title={`View ${title}`}\n      >\n        {title}\n      </button>\n      <span\n        className={`${prefixClass}-node-menu-trigger-container`}\n        style={{ opacity: (iconsVisible ? 1 : 0) }}\n        onMouseMove={() => setIconsVisible(true)}\n        onMouseLeave={() => setIconsVisible(false)}\n      >\n        <PopoverMenu\n          menuConfig={makeNodeViewMenuConfig(props)}\n          onClose={() => setIconsVisible(false)}\n        >\n          <Icon component={EyeSVG} className={`${prefixClass}-node-menu-trigger`} title=\"View options\" />\n        </PopoverMenu>\n        <Icon component={PenSVG} className={`${prefixClass}-node-menu-trigger`} title=\"Rename\" onClick={() => tree.startEditing(setKey)} />\n        <PopoverMenu\n          menuConfig={[{\n            name: 'Delete',\n            handler: () => tree.deleteNode(setKey),\n            handlerKey: 'd',\n          }, {\n            name: 'Cancel',\n            handler: () => {},\n            handlerKey: 'x',\n          }]}\n          onClose={() => setIconsVisible(false)}\n        >\n          <Icon component={TrashSVG} className={`${prefixClass}-node-menu-trigger`} title=\"Delete\" />\n        </PopoverMenu>\n      </span>\n    </>\n  );\n}\n\nfunction NamedSetNodeEditing(props) {\n  const {\n    title,\n    prefixClass,\n    tree,\n    setKey,\n  } = props;\n  const [currentTitle, setCurrentTitle] = useState(title);\n  return (\n    <>\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus\n        className={`${prefixClass}-title-input`}\n        type=\"text\"\n        value={currentTitle}\n        onChange={(e) => { setCurrentTitle(e.target.value); }}\n        onKeyPress={e => callbackOnKeyPress(e, 'Enter', () => tree.changeNodeName(setKey, currentTitle, true))}\n        onFocus={e => e.target.select()}\n      />\n      <button\n        type=\"button\"\n        className={`${prefixClass}-title-save-button`}\n        onClick={() => tree.changeNodeName(setKey, currentTitle, true)}\n      >\n        Save\n      </button>\n    </>\n  );\n}\n\n\nfunction NamedSetNode(props) {\n  const {\n    isEditing,\n    isCurrentSet,\n  } = props;\n  return (\n    (isEditing || isCurrentSet)\n      ? (<NamedSetNodeEditing {...props} />)\n      : (<NamedSetNodeStatic {...props} />)\n  );\n}\n\nexport default class TreeNode extends RcTreeNode {\n  renderSelector = () => {\n    const {\n      tree,\n      setKey,\n      title,\n      size,\n      color,\n      isCurrentSet,\n      isSelected,\n      isEditing,\n    } = this.props;\n    const {\n      rcTree: {\n        prefixCls: prefixClass,\n        draggable,\n      },\n    } = this.context;\n\n    const wrapClass = `${prefixClass}-node-content-wrapper`;\n    const isDraggable = (!isCurrentSet && !isEditing && draggable);\n    return (\n      <span\n        ref={this.setSelectHandle}\n        title={title}\n        className={classNames(\n          wrapClass,\n          `${wrapClass}-${this.getNodeState() || 'normal'}`,\n          isSelected && `${prefixClass}-node-selected`,\n          isDraggable && 'draggable',\n        )}\n        draggable={isDraggable}\n        aria-grabbed={isDraggable}\n        onDragStart={isDraggable ? this.onDragStart : undefined}\n      >\n        <NamedSetNode {...this.props} prefixClass={prefixClass} />\n        <span className={`${prefixClass}-title-right`}>\n          <span className={`${prefixClass}-set-size`}>{size || null}</span>\n          <PopoverColor\n            prefixClass={prefixClass}\n            color={color}\n            setColor={c => tree.changeNodeColor(setKey, c)}\n          />\n        </span>\n      </span>\n    );\n  };\n\n  render() {\n    const { loading } = this.props;\n    const {\n      className, style,\n      dragOver, dragOverGapTop, dragOverGapBottom,\n      isLeaf,\n      expanded, selected, checked, halfChecked,\n      ...otherProps\n    } = this.props;\n    const {\n      rcTree: {\n        prefixCls: prefixClass,\n        filterTreeNode,\n        draggable,\n      },\n    } = this.context;\n    const disabled = this.isDisabled();\n    const dataAndAriaAttributeProps = getDataAndAria(otherProps);\n    return (\n      <li\n        className={classNames(className, {\n          [`${prefixClass}-treenode-disabled`]: disabled,\n          [`${prefixClass}-treenode-switcher-${expanded ? 'open' : 'close'}`]: !isLeaf,\n          [`${prefixClass}-treenode-checkbox-checked`]: checked,\n          [`${prefixClass}-treenode-checkbox-indeterminate`]: halfChecked,\n          [`${prefixClass}-treenode-selected`]: selected,\n          [`${prefixClass}-treenode-loading`]: loading,\n\n          'drag-over': !disabled && dragOver,\n          'drag-over-gap-top': !disabled && dragOverGapTop,\n          'drag-over-gap-bottom': !disabled && dragOverGapBottom,\n          'filter-node': filterTreeNode && filterTreeNode(this),\n        })}\n        style={style}\n        role=\"treeitem\"\n        onDragEnter={draggable ? this.onDragEnter : undefined}\n        onDragOver={draggable ? this.onDragOver : undefined}\n        onDragLeave={draggable ? this.onDragLeave : undefined}\n        onDrop={draggable ? this.onDrop.bind(this) : undefined}\n        onDragEnd={draggable ? this.onDragEnd : undefined}\n        {...dataAndAriaAttributeProps}\n      >\n        {this.renderSwitcher()}\n        {this.renderCheckbox()}\n        {this.renderSelector()}\n        {this.renderChildren()}\n      </li>\n    );\n  }\n}\n","import { dsvFormat } from 'd3-dsv';\nimport Ajv from 'ajv';\nimport tinycolor from 'tinycolor2';\nimport { parse as json2csv } from 'json2csv';\nimport { version } from '../../../package.json';\nimport { PATH_SEP } from './sets';\n\nimport hierarchicalSetsSchema from '../../schemas/hierarchical-sets.schema.json';\n\nexport const tabularFileType = 'TSV';\nexport const tabularFileExtension = 'tsv';\nconst tabularColumnSeparator = '\\t';\nconst tabularHierarchySeparator = ';';\nconst tabularNA = 'NA';\n\n/**\n * Check whether the elements of two arrays are equal.\n * @param {Array} a One of the two arrays.\n * @param {Array} b The other of the two arrays.\n * @returns {boolean} Whether the two arrays contain the same elements.\n */\nfunction arraysEqual(a, b) {\n  return a.length === b.length && a.every((v, i) => v === b[i]);\n}\n\n/**\n * Make a timestamped name for an import root node.\n * @returns {string} A new name for an import node.\n */\nfunction makeImportName() {\n  const timestamp = (new Date()).toLocaleString();\n  return `Import ${timestamp}`;\n}\n\n/**\n * Handler for tabular (TSV) imports.\n * @param {object} props The component props.\n * @param {string} result The data passed from the onImport function as a string.\n */\nexport function handleImportTabular(props, result) {\n  const {\n    setsTree,\n  } = props;\n  const dsvParser = dsvFormat(tabularColumnSeparator);\n  /**\n    * Convert a string color representation to an array of [r,g,b].\n    * @param {string} colorString The color as a string.\n    * @returns {Array} The color as an array.\n    */\n  function colorAsArray(colorString) {\n    const colorObj = tinycolor(colorString).toRgb();\n    return [colorObj.r, colorObj.g, colorObj.b];\n  }\n  // Fall back to set name if set key not provided.\n  const importData = dsvParser.parse(result, row => ({\n    itemId: row['Item ID'],\n    setName: row['Set Name'],\n    setKey: row['Set Key'] || row['Set Name'].split(tabularHierarchySeparator).join(PATH_SEP),\n    setColor: colorAsArray(row['Set Color']),\n  }));\n  // Make array of unique set key strings.\n  const importedSetKeys = Array.from(new Set(importData.map(d => d.setKey)));\n  // Construct the array representation of the tree required by the tree import function.\n  const importedSetsTree = [];\n  // Iterate over each set and append to the tree array representation.\n  importedSetKeys.forEach((setKey) => {\n    const setItems = importData.filter(d => d.setKey === setKey);\n    // length === 1 because we include a parent item in the export.\n    const isEmpty = setItems.length === 1 && setItems[0].itemId === tabularNA;\n    // Use the first item of the set to get the set name and set color values\n    // that will be used for the whole set.\n    const firstItem = setItems[0];\n    const setNameArray = firstItem.setName.split(tabularHierarchySeparator);\n    importedSetsTree.push({\n      name: setNameArray[setNameArray.length - 1],\n      key: setKey,\n      color: firstItem.setColor,\n      ...(!isEmpty ? { set: setItems.map(d => d.itemId) } : null),\n    });\n  });\n  setsTree.import(importedSetsTree, makeImportName());\n}\n\n/**\n * Handler for JSON imports.\n * @param {object} props The component props.\n * @param {string} result The data passed from the onImport function as a string.\n */\nexport function handleImportJSON(props, result) {\n  const {\n    datasetId,\n    setsType,\n    setsTree,\n    onError,\n  } = props;\n  const importData = JSON.parse(result);\n  // Validate the imported file.\n  const validate = new Ajv().compile(hierarchicalSetsSchema);\n  const valid = validate(importData);\n  if (!valid) {\n    const failureReason = JSON.stringify(validate.errors, null, 2);\n    onError(`Import validation failed: ${failureReason}`);\n  } else if (importData.datasetId !== datasetId) {\n    onError('The imported datasetId does not match the current datasetId.');\n  } else if (importData.version !== version) {\n    onError('The imported schema version is not compatible with the current schema version.');\n  } else if (importData.setsType !== setsType) {\n    onError('The imported setsType does not match the current setsType.');\n  } else {\n    onError(false); // Clear any previous import error.\n    setsTree.import(importData.setsTree, makeImportName());\n  }\n}\n\n/**\n * Convert the tree to a tabular representation and then a string.\n * Uses set keys as unique set identifiers to allow repeated set names.\n * @param {object} props The component props.\n * @returns {string} The data in a string representation.\n */\nexport function handleExportTabular(props) {\n  const {\n    setsTree,\n  } = props;\n  const exportedSetsTree = setsTree.export();\n  const exportData = [];\n  if (exportedSetsTree.length > 0) {\n    let prevNodeNameArray = [exportedSetsTree[0].name];\n    let prevNodeKeyArray = [exportedSetsTree[0].key];\n    // Iterate over each set.\n    exportedSetsTree.forEach((node) => {\n    // Compute the hierarchical name for the current node,\n    // assuming the array of exported nodes is sorted.\n      const currNodeKeyArray = node.key.split(PATH_SEP);\n      if (arraysEqual(currNodeKeyArray, prevNodeKeyArray)) {\n      // Do nothing, the node key and name are correct.\n      } else if (arraysEqual(\n        currNodeKeyArray.slice(0, currNodeKeyArray.length - 1),\n        prevNodeKeyArray,\n      )) {\n      // The current node is a child of the previous node, so update the prev key and name.\n        prevNodeKeyArray = currNodeKeyArray;\n        prevNodeNameArray.push(node.name);\n      } else if (currNodeKeyArray.length === 1) {\n      // The current node is at the first level of the tree, so reset the prev key and name.\n        prevNodeNameArray = [node.name];\n        prevNodeKeyArray = currNodeKeyArray;\n      } else if (arraysEqual(\n        currNodeKeyArray.slice(0, currNodeKeyArray.length - 1),\n        prevNodeKeyArray.slice(0, prevNodeKeyArray.length - 1),\n      )) {\n      // The current node is at the same level as the previous node but is different.\n        prevNodeKeyArray = currNodeKeyArray;\n        prevNodeNameArray = [\n          ...prevNodeNameArray.slice(0, prevNodeNameArray.length - 1),\n          node.name,\n        ];\n      }\n      // Within a set, iterate over each item to create a new row of the table.\n      if (node.set && node.set.length > 0) {\n        node.set.forEach((item) => {\n          exportData.push({\n            'Item ID': item,\n            'Set Key': node.key,\n            'Set Name': prevNodeNameArray.join(tabularHierarchySeparator),\n            'Set Color': tinycolor({ r: node.color[0], g: node.color[1], b: node.color[2] })\n              .toHexString(),\n          });\n        });\n      } else {\n        exportData.push({\n          'Item ID': tabularNA,\n          'Set Key': node.key,\n          'Set Name': prevNodeNameArray.join(tabularHierarchySeparator),\n          'Set Color': tinycolor({ r: node.color[0], g: node.color[1], b: node.color[2] })\n            .toHexString(),\n        });\n      }\n    });\n  }\n  // Export to tabular file and do the download.\n  const csv = json2csv(exportData, {\n    fields: ['Item ID', 'Set Key', 'Set Name', 'Set Color'],\n    delimiter: tabularColumnSeparator,\n  });\n  const dataString = `data:text/${tabularFileExtension};charset=utf-8,${encodeURIComponent(csv)}`;\n  return dataString;\n}\n\n/**\n * Download the sets tree in a JSON representation.\n * @param {object} props The component props.\n * @returns {string} The data in a string representation.\n */\nexport function handleExportJSON(props) {\n  const {\n    datasetId,\n    setsType,\n    setsTree,\n  } = props;\n  const exportData = {\n    datasetId,\n    setsType,\n    version,\n    setsTree: setsTree.export(),\n  };\n  // eslint-disable-next-line prefer-template\n  const dataString = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(exportData));\n  return dataString;\n}\n","import uuidv4 from 'uuid/v4';\nimport { DEFAULT_COLOR, fromEntries } from '../utils';\n\nconst CURRENT_SET_NAME = 'Current selection';\nconst ALL_ROOT_KEY = 'all';\nconst ALL_ROOT_NAME = 'All';\nexport const PATH_SEP = '\\t';\n\n/**\n * Like .find but can return the truthy value rather than returning the element.\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The callback function, should return truthy or null.\n * @returns {any} The first return value for which callback returns true.\n */\nfunction findValue(array, callback) {\n  // eslint-disable-next-line no-restricted-syntax\n  for (const el of array) {\n    const callbackResult = callback(el);\n    if (callbackResult) {\n      return callbackResult;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove all instances of a value from an array,\n * based on the result of a test function.\n * @param {Array} array The array to iterate over.\n * @param {Function} shouldRemove The test function. Returns boolean.\n * @returns {Array} The array after removing items.\n */\nfunction removeValue(array, shouldRemove) {\n  return array.reduce((a, h) => (shouldRemove(h) ? a : [...a, h]), []);\n}\n\n/**\n * Node class for SetsTree.\n */\nexport class SetsTreeNode {\n  constructor(props) {\n    const {\n      setKey,\n      name,\n      isRoot = false,\n      isEditing = false,\n      isCurrentSet = false,\n      color = DEFAULT_COLOR,\n      children,\n      set,\n    } = props;\n    this.setKey = setKey;\n    this.name = name;\n    this.set = set;\n    this.children = children;\n    this.color = color;\n    this.isRoot = isRoot;\n    this.isEditing = isEditing;\n    this.isCurrentSet = isCurrentSet;\n  }\n\n  setIsEditing(v) {\n    this.isEditing = v;\n  }\n\n  setChildren(children) {\n    this.children = children;\n  }\n\n  setSetKey(setKey) {\n    this.setKey = setKey;\n  }\n\n  setName(name) {\n    this.name = name;\n  }\n\n  setIsCurrentSet(v) {\n    this.isCurrentSet = v;\n  }\n\n  setColor(v) {\n    this.color = v;\n  }\n\n  /**\n   * Find the node with .isCurrentSet equal to true.\n   * @returns {SetsTreeNode} The current set node.\n   */\n  findCurrentSetNode() {\n    if (this.isCurrentSet) {\n      return this;\n    }\n    if (!this.children) {\n      return null;\n    }\n    return findValue(this.children, child => child.findCurrentSetNode());\n  }\n\n  /**\n   * Find a node of interest.\n   * @param {string} setKey The key of the node of interest.\n   * @returns {SetsTreeNode} The node of interest.\n   */\n  findNode(setKey) {\n    if (this.setKey === setKey) {\n      return this;\n    }\n    if (!this.children) {\n      return null;\n    }\n    return findValue(this.children, child => child.findNode(setKey));\n  }\n\n  /**\n   * Find parent of a node of interest.\n   * @param {string} setKey The key of the node of interest.\n   * @returns {SetsTreeNode} The parent of the node of interest.\n   */\n  findParentNode(setKey) {\n    if (!this.children || this.children.length === 0) {\n      return null;\n    }\n    if (this.children.find(child => child.setKey === setKey)) {\n      return this;\n    }\n    return findValue(this.children, child => child.findParentNode(setKey));\n  }\n\n  /**\n   * Get an object that can be used to render this node.\n   * @returns {object} The node's attributes represented as a flat object.\n   */\n  getRenderProps() {\n    return {\n      title: this.name,\n      setKey: this.setKey,\n      size: this.set ? this.set.length : 0,\n      color: this.color,\n      level: this.getLevel(),\n      isRoot: this.isRoot,\n      isEditing: this.isEditing,\n      isCurrentSet: this.isCurrentSet,\n    };\n  }\n\n  /**\n   * Get the last part of the key, after the final period.\n   * If no period, return the whole key string.\n   * @returns {string} The tail of the key.\n   */\n  getKeyTail() {\n    return this.setKey.match(new RegExp(`^(.*${PATH_SEP})*([^${PATH_SEP}]*)$`))[2];\n  }\n\n  /**\n   * Get the first part of the key, before the final period.\n   * Assumes there will be at least one period.\n   * @returns {string} The head of the key.\n   */\n  getKeyHead() {\n    return this.setKey.match(new RegExp(`^(.*)${PATH_SEP}[^${PATH_SEP}]*$`))[1];\n  }\n\n  /**\n   * Return the level of the node relative to the \"bottom\" of the tree.\n   * @returns {integer} The level.\n   *                    0 means leaf, 1 has children, 2 grandchildren, etc.\n   */\n  getLevel() {\n    if (!this.children || this.children.length === 0) {\n      return 0;\n    }\n    return Math.max(...this.children.map(child => child.getLevel() + 1));\n  }\n\n  /**\n   * Return a flat array of descendants at a particular level from this node.\n   * @param {integer} level The level of interest.\n   *                        0 means children, 1 grandchildren, etc.\n   * @returns {SetsTreeNode[]} The array of nodes.\n   */\n  getDescendantsFlat(level) {\n    if (!this.children) {\n      return [];\n    }\n    if (level === 0) {\n      return this.children;\n    }\n    return this.children.flatMap(c => c.getDescendantsFlat(level - 1));\n  }\n\n  /**\n   * Update child keys, keeping the same key tails but updating\n   * key head \"paths\" to match the current tree structure.\n   */\n  updateChildKeys() {\n    if (!this.children) {\n      return;\n    }\n    this.children.forEach((child) => {\n      const newChildKey = this.setKey + PATH_SEP + child.getKeyTail();\n      // TODO: check for existence of duplicate keys before setting the key.\n      child.setSetKey(newChildKey);\n      child.updateChildKeys();\n    });\n  }\n}\n\n/**\n * Tree class for storage of hierarchical sets\n * of IDs (cell IDs, gene IDs, etc...).\n */\nexport default class SetsTree {\n  /**\n   * Create a SetsTree object.\n     * @param {Function} onTreeChange Function called when the tree structure\n     *                                or values change.\n     * @param {Function} onVisibilityChange Function called when the currently-visible\n     *                                      sets array changes.\n     */\n  constructor(onTreeChange, onVisibilityChange) {\n    this.root = new SetsTreeNode({\n      setKey: ALL_ROOT_KEY,\n      name: ALL_ROOT_NAME,\n      children: [],\n      isRoot: true,\n    });\n    this.items = [];\n    this.tabRoots = [this.root];\n    this.checkedKeys = [];\n    this.visibleKeys = [];\n    this.onTreeChange = onTreeChange;\n    this.onVisibilityChange = onVisibilityChange;\n  }\n\n  /**\n   * Set the array of all items to be able to do complement operations.\n   * @param {Array} items The array of items.\n   */\n  setItems(items) {\n    this.items = items;\n  }\n\n  /**\n   * Compute the intersection of specified sets.\n   * @param {Array} setKeys An array of the sets of interest.\n   * @returns {Array} The resulting set as an array.\n   */\n  getIntersection(setKeys) {\n    const nodes = setKeys.map(key => this.findNode(key));\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n    const nodeSets = nodes.map(node => node.set || []);\n    return nodeSets\n      .reduce((a, h) => h.filter(hEl => a.includes(hEl)), nodeSets[0]);\n  }\n\n  /**\n   * Compute the union of specified sets.\n   * @param {Array} setKeys An array of the sets of interest.\n   * @returns {Array} The resulting set as an array.\n   */\n  getUnion(setKeys) {\n    const nodes = setKeys.map(key => this.findNode(key));\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n    const nodeSets = nodes.map(node => node.set || []);\n    return nodeSets\n      .reduce((a, h) => a.concat(h.filter(hEl => !a.includes(hEl))), nodeSets[0]);\n  }\n\n  /**\n   * Compute the complement of specified sets.\n   * @param {Array} setKeys An array of the sets of interest.\n   * @returns {Array} The resulting set as an array.\n   */\n  getComplement(setKeys) {\n    const primaryUnion = this.getUnion(setKeys);\n    return this.items.filter(el => !primaryUnion.includes(el));\n  }\n\n  /**\n   * Set the array of checked node setKey values.\n   * @param {string[]} checkedKeys The array of setKey values to check.\n   */\n  setCheckedKeys(checkedKeys) {\n    this.checkedKeys = checkedKeys;\n    this.emitTreeUpdate();\n  }\n\n  /**\n   * Set the array of visible node setKey values.\n   * @param {string[]} visibleKeys The array of setKey values to set as visible.\n   */\n  setVisibleKeys(visibleKeys) {\n    this.visibleKeys = visibleKeys;\n    this.emitVisibilityUpdate();\n  }\n\n  /**\n   * Set the current set's set array value.\n   * @param {iterable} set The new set values.\n   * @param {boolean} visible Whether to make the current set visible.\n   * @param {string} name If provided, will use this name over the default CURRENT_SET_NAME.\n   */\n  setCurrentSet(set, visible, name) {\n    let currentSetNode = this.findCurrentSetNode();\n    if (!currentSetNode) {\n      const uuid = uuidv4();\n      currentSetNode = new SetsTreeNode({\n        setKey: ALL_ROOT_KEY + PATH_SEP + uuid,\n        set: [],\n        isEditing: true,\n        isCurrentSet: true,\n      });\n      this.prependChild(currentSetNode);\n    }\n    currentSetNode.set = Array.from(set);\n    if (name) {\n      currentSetNode.setName(name);\n    } else {\n      currentSetNode.setName(CURRENT_SET_NAME);\n    }\n    if (visible) {\n      this.visibleKeys = [currentSetNode.setKey];\n    }\n    this.emitTreeUpdate();\n  }\n\n  /**\n   * Find the node with .isCurrentSet equal to true.\n   * @returns {SetsTreeNode} The current set node.\n   */\n  findCurrentSetNode() {\n    return this.root.findCurrentSetNode();\n  }\n\n  /**\n   * Find a node of interest.\n   * @param {string} setKey The key of the node of interest.\n   * @returns {SetsTreeNode} The node of interest.\n   */\n  findNode(setKey) {\n    return this.root.findNode(setKey);\n  }\n\n  /**\n   * Find parent of a node of interest.\n   * @param {string} setKey The key of the node of interest.\n   * @returns {SetsTreeNode} The parent of the node of interest.\n   */\n  findParentNode(setKey) {\n    return this.root.findParentNode(setKey);\n  }\n\n  /**\n   * Rearrange nodes after a drag interaction (within a particular tab's subtree).\n   * Does nothing if the dragNode or dropNode are the current set node.\n   * May update node keys to reflect the new hierarchy.\n   * @param {SetsTreeNode} tabRoot The root of the subtree in which the drag occurred.\n   * @param {string} dropKey The key of the node on which the dragNode was dropped.\n   * @param {string} dragKey The key of the node that was dragged.\n   * @param {integer} dropPosition The index of the drop.\n   * @param {boolean} dropToGap Whether the dragNode should move\n   *                            between nodes or become a child.\n   */\n  dragRearrange(tabRoot, dropKey, dragKey, dropPosition, dropToGap) {\n    const dragNode = tabRoot.findNode(dragKey);\n    const dragParentNode = tabRoot.findParentNode(dragKey);\n    let dragNodeCurrIndex = dragParentNode.children.findIndex(c => c.setKey === dragKey);\n\n    const dropNode = tabRoot.findNode(dropKey);\n    const dropParentNode = tabRoot.findParentNode(dropKey);\n    let dropNodeCurrIndex = dropParentNode.children.findIndex(c => c.setKey === dropKey);\n\n    if (dragNode.isCurrentSet || dropNode.isCurrentSet) {\n      return;\n    }\n\n    dropNode.setChildren(dropNode.children || []);\n    // Remove the dragged object from its current position.\n    dragParentNode.children.splice(dragNodeCurrIndex, 1);\n\n    // Update index values after deleting the child node.\n    dragNodeCurrIndex = dragParentNode.children.findIndex(c => c.setKey === dragKey);\n    dropNodeCurrIndex = dropParentNode.children.findIndex(c => c.setKey === dropKey);\n\n    if (!dropToGap) {\n      // Set dragNode as last child of dropNode.\n      dropNode.setChildren([...dropNode.children, dragNode]);\n    } else if (dropPosition === -1) {\n      // Set dragNode as first child of dropParentNode.\n      dropParentNode.setChildren([dragNode, ...dropParentNode.children]);\n    } else {\n      dropParentNode.children\n        .splice(dropNodeCurrIndex + (dropPosition > dropNodeCurrIndex ? 1 : 0), 0, dragNode);\n    }\n\n    tabRoot.updateChildKeys();\n    this.emitTreeUpdate();\n  }\n\n  /**\n   * Set isEditing to true for a node of interest.\n   * @param {string} setKey The key of the node of interest.\n   */\n  startEditing(setKey) {\n    const node = this.findNode(setKey);\n    node.setIsEditing(true);\n    this.emitTreeUpdate();\n  }\n\n  /**\n   * Set the color for a node of interest.\n   * @param {string} setKey The key of the node of interest.\n   * @param {Array} color The color value as [r, g, b].\n   */\n  changeNodeColor(setKey, color) {\n    const node = this.findNode(setKey);\n    node.setColor(color);\n    this.emitTreeUpdate();\n    this.emitVisibilityUpdate();\n  }\n\n  /**\n   * Delete a node of interest, and all of its children.\n   * @param {string} setKey The key of the node of interest.\n   * @param {boolean} preventEmit Whether to prevent the emit event.\n   */\n  deleteNode(setKey, preventEmit) {\n    const node = this.findNode(setKey);\n    const parentNode = this.findParentNode(setKey);\n    if (!node || !parentNode) {\n      return;\n    }\n    if (node.children) {\n      node.children.forEach(c => this.deleteNode(c.setKey, true));\n    }\n    // Check whether the node is a tabRoot, remove the corresponding tab(s) if so.\n    this.closeTab(setKey, true);\n    // Check whether the node is in checkedKeys, remove the corresponding key if so.\n    this.checkedKeys = removeValue(this.checkedKeys, h => (h === setKey));\n    // Check whether the node is in visibleKeys, remove the corresponding key if so.\n    this.visibleKeys = removeValue(this.visibleKeys, h => (h === setKey));\n\n    const nodeIndex = parentNode.children.findIndex(c => c.setKey === setKey);\n    if (nodeIndex === -1) {\n      return;\n    }\n    parentNode.children.splice(nodeIndex, 1);\n    if (!preventEmit) {\n      this.emitTreeUpdate();\n      this.emitVisibilityUpdate();\n    }\n  }\n\n  /**\n   * Change a node's name.\n   * @param {string} setKey The key of the node of interest.\n   * @param {string} newName The new name value to assign.\n   * @param {boolean} stopEditing Whether to also set isEditing to false.\n   */\n  changeNodeName(setKey, newName, stopEditing) {\n    const node = this.findNode(setKey);\n    node.setName(newName);\n\n    if (stopEditing) {\n      node.setIsEditing(false);\n    }\n    if (node.isCurrentSet) {\n      node.setIsCurrentSet(false);\n    }\n    this.emitTreeUpdate();\n  }\n\n  /**\n   * Prepend a child to the root node's children array.\n   * May update node keys to reflect the new hierarchy.\n   * @param {SetsTreeNode} node The child node to prepend.\n   */\n  prependChild(node) {\n    this.root.setChildren([node, ...this.root.children]);\n    this.root.updateChildKeys();\n    this.emitTreeUpdate();\n  }\n\n  /**\n   * Append a child to the root node's children array.\n   * May update node keys to reflect the new hierarchy.\n   * @param {SetsTreeNode} node The child node to append.\n   */\n  appendChild(node) {\n    this.root.setChildren([...this.root.children, node]);\n    this.root.updateChildKeys();\n    this.emitTreeUpdate();\n  }\n\n  /**\n   * Set a set node to visible based on its key.\n   * Discards any previously-visible sets.\n   * @param {string} setKey The key of the node of interest.\n   */\n  viewSet(setKey) {\n    this.visibleKeys = [setKey];\n    this.emitVisibilityUpdate();\n  }\n\n  /**\n   * Set all of a set node's descendents at a particular level\n   * to visible based on its key.\n   * Discards any previously-visible sets.\n   * @param {string} setKey The key of the node of interest.\n   * @param {integer} level The level of interest. 0 means children, 1 grandchildren, etc.\n   */\n  viewSetDescendants(setKey, level) {\n    const node = this.findNode(setKey);\n    const descendentsOfInterest = node.getDescendantsFlat(level);\n    this.visibleKeys = descendentsOfInterest.map(d => d.setKey);\n    this.emitVisibilityUpdate();\n  }\n\n  /**\n   * Add a new tab root.\n   * @param {string} setKey The key of the node to be used as the tab root.\n   */\n  newTab(setKey) {\n    const node = this.findNode(setKey);\n    // Only add a tab if it does not already exist.\n    if (!this.tabRoots.find(t => t.setKey === setKey)) {\n      this.tabRoots = [...this.tabRoots, node];\n      this.emitTreeUpdate();\n    }\n  }\n\n  /**\n   * Remove a tab root by its key.\n   * @param {string} setKey The key of the tab root node to be removed.\n   * @param {boolean} preventEmit Whether to prevent the emit event.\n   */\n  closeTab(setKey, preventEmit) {\n    this.tabRoots = removeValue(this.tabRoots, h => (h.setKey === setKey));\n    if (!preventEmit) {\n      this.emitTreeUpdate();\n    }\n  }\n\n  /**\n   * Import previously-exported sets.\n   * Assumes a hierarchical ordering.\n   * Will append the root of the import to the current root's children.\n   * @param {Array} data A previously-exported array of set objects.\n   * @param {string} name The name for the new dummy ancestor node.\n   */\n  import(data, name) {\n    if (!data || data.length < 1) {\n      return;\n    }\n    const uuid = uuidv4();\n    const importRoot = new SetsTreeNode({\n      setKey: uuid,\n      name,\n    });\n\n    data.forEach((nodeObj) => {\n      const node = new SetsTreeNode({\n        setKey: nodeObj.key,\n        name: nodeObj.name,\n        color: nodeObj.color,\n        set: nodeObj.set,\n      });\n      let parentNode;\n      if (node.setKey.lastIndexOf(PATH_SEP) === -1) {\n        parentNode = importRoot;\n      } else {\n        parentNode = importRoot.findNode(node.getKeyHead());\n      }\n      parentNode.setChildren([...(parentNode.children || []), node]);\n    });\n    this.appendChild(importRoot);\n  }\n\n  /**\n   * Create an array that can be imported.\n   * @returns {Array} An array of plain objects.\n   */\n  export() {\n    const result = [];\n    let dfs = [...this.root.children];\n    while (dfs.length > 0) {\n      const currNode = dfs.pop();\n      result.push({\n        key: currNode.setKey.substring(ALL_ROOT_KEY.length + PATH_SEP.length),\n        name: currNode.name,\n        color: currNode.color,\n        set: currNode.set,\n      });\n      dfs = dfs.concat(currNode.children || []);\n    }\n    return result;\n  }\n\n  /**\n   * Call .onTreeChange with the current this value.\n   */\n  emitTreeUpdate() {\n    if (this.onTreeChange) {\n      this.onTreeChange(this);\n    }\n  }\n\n  /**\n   * Call .onVisibilityChange with the currently-visible set items\n   * in a single Set object.\n   */\n  emitVisibilityUpdate() {\n    if (this.onVisibilityChange) {\n      let cellColorsArray = [];\n      this.visibleKeys.forEach((setKey) => {\n        const node = this.findNode(setKey);\n        if (node && node.set && node.set.length > 0) {\n          cellColorsArray = [\n            ...cellColorsArray,\n            ...node.set.map(cellId => [cellId, node.color]),\n          ];\n        }\n      });\n      const cellIds = cellColorsArray.map(c => c[0]);\n      const cellColors = fromEntries(cellColorsArray);\n      this.onVisibilityChange(new Set(cellIds), cellColors);\n    }\n  }\n}\n","/**\n * Execute a callback function based on a keypress event.\n * @param {object} event The event from onKeyPress\n * @param {string} key The key identifier to match.\n * @param {Function} callback The function to execute.\n */\nexport function callbackOnKeyPress(event, key, callback) {\n  if (event.key === key) {\n    callback();\n  }\n}\n\n/**\n * Return an array from 0..stop.\n * @param {integer} stop The end of the array, exclusive.\n * @returns {Array} The resulting array of integers.\n */\nexport function range(stop) {\n  return Array.from(Array(stop), (x, i) => i);\n}\n\n// From https://stackoverflow.com/a/13627586\nfunction ordinalSuffixOf(i) {\n  const j = i % 10;\n  const k = i % 100;\n  if (j === 1 && k !== 11) {\n    return `${i}st`;\n  }\n  if (j === 2 && k !== 12) {\n    return `${i}nd`;\n  }\n  if (j === 3 && k !== 13) {\n    return `${i}rd`;\n  }\n  return `${i}th`;\n}\n\n/**\n * Convert an integer to the name of the corresponding tree level.\n * Relative to the current node.\n * @param {integer} i The index of the level. 0 means children, 1 grandchildren, etc.\n * @returns {string} The name.\n */\nexport function levelNameFromIndex(i) {\n  return `${ordinalSuffixOf(i + 1)} descendants`;\n}\n","import Ajv from 'ajv';\nimport PubSub from 'pubsub-js';\nimport React from 'react';\nimport { createTiffPyramid, createZarrPyramid } from '@hubmap/vitessce-image-viewer';\n\nimport {\n  STATUS_WARN, STATUS_INFO,\n  CELLS_ADD, CLUSTERS_ADD, FACTORS_ADD, GENES_ADD, MOLECULES_ADD, NEIGHBORHOODS_ADD,\n  CLEAR_PLEASE_WAIT, RASTER_ADD,\n} from '../../events';\n\nimport cellsSchema from '../../schemas/cells.schema.json';\nimport clustersSchema from '../../schemas/clusters.schema.json';\nimport factorsSchema from '../../schemas/factors.schema.json';\nimport genesSchema from '../../schemas/genes.schema.json';\nimport moleculesSchema from '../../schemas/molecules.schema.json';\nimport neighborhoodsSchema from '../../schemas/neighborhoods.schema.json';\nimport rasterSchema from '../../schemas/raster.schema.json';\n\nconst typeToSchema = {\n  CELLS: cellsSchema,\n  CLUSTERS: clustersSchema,\n  FACTORS: factorsSchema,\n  GENES: genesSchema,\n  MOLECULES: moleculesSchema,\n  NEIGHBORHOODS: neighborhoodsSchema,\n  RASTER: rasterSchema,\n};\n\nconst typeToEvent = {\n  CELLS: CELLS_ADD,\n  CLUSTERS: CLUSTERS_ADD,\n  FACTORS: FACTORS_ADD,\n  GENES: GENES_ADD,\n  MOLECULES: MOLECULES_ADD,\n  NEIGHBORHOODS: NEIGHBORHOODS_ADD,\n  RASTER: RASTER_ADD,\n};\n\nfunction warn(message) {\n  PubSub.publish(STATUS_WARN, message);\n}\n\nfunction info(fileName) {\n  PubSub.publish(STATUS_INFO, `Loaded ${fileName}.`);\n}\n\nasync function initRasterLayer(data) {\n  /*\n  * TODO: Some of the hard-coded logic previously baked into vitessce-image-viewer\n  * is now handled in this function to intialize the `loaders`. The URL-specific logic\n  * (i.e. tiff vs zarr) and provided `isRgb`, `scale`, and `dimensions` should all be\n  * included in the raster source moving forward.\n  *\n  * Removing this logic includes designing a unified schema for raster sources,\n  * requiring an update to `vitessce-data` & `vitessce` which is in progress #486.\n  *\n  *          https://github.com/hubmapconsortium/vitessce/issues/486\n  */\n  const channelNames = Object.keys(data);\n  const channelUrls = Object.values(data).map(d => d.tileSource);\n  const raster = {\n    channelNames,\n    domains: Object.values(data).map(d => d.range),\n    id: String(Date.now()),\n  };\n  if (channelUrls[0].includes('tif')) {\n    const loader = await createTiffPyramid({ channelNames, channelUrls });\n    return { ...raster, loader };\n  } if (channelUrls[0].includes('zarr')) {\n    const rootZarrUrl = channelUrls[0].slice(0, -1);\n    const { minZoom } = Object.values(data)[0];\n    const loader = await createZarrPyramid({\n      rootZarrUrl,\n      minZoom,\n      isRgb: false,\n      scale: 1,\n      dimensions: {\n        channel: channelNames,\n        y: null,\n        x: null,\n      },\n    });\n    return { ...raster, loader };\n  }\n  throw Error(`No raster loader defined for image with tile source ${channelUrls[0]}`);\n}\n\nfunction publishLayer(data, type, name, url) {\n  const schema = typeToSchema[type];\n  if (!schema) {\n    throw Error(`No schema for ${type}`);\n  }\n  const validate = new Ajv().compile(schema);\n  const valid = validate(data);\n  if (!valid) {\n    const failureReason = JSON.stringify(validate.errors, null, 2);\n    warn(`Error while validating ${name}. Details in console.`);\n    console.warn(`\"${name}\" (${type}) from ${url}: validation failed`, failureReason);\n  }\n\n  if (type === 'RASTER') {\n    initRasterLayer(data).then((rasterData) => {\n      PubSub.publish(RASTER_ADD, rasterData);\n      info(name);\n    });\n  } else {\n    PubSub.publish(typeToEvent[type], data);\n    info(name);\n  }\n}\n\nfunction loadLayer(layer) {\n  const {\n    name, type, url, requestInit = {},\n  } = layer;\n  fetch(url, requestInit)\n    .then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          publishLayer(data, type, name, url);\n        }, (failureReason) => {\n          warn(`Error while parsing ${name}. Details in console.`);\n          console.warn(`\"${name}\" (${type}) from ${url}: parse failed`, failureReason);\n        });\n      } else {\n        warn(`Error HTTP status from ${name}. Details in console.`);\n        console.warn(`\"${name}\" (${type}) from ${url}: HTTP failed`, response.headers);\n      }\n    }, (failureReason) => {\n      warn(`Error while fetching ${name}. Details in console.`);\n      console.warn(`\"${name}\" (${type}) from ${url}: fetch failed`, failureReason);\n    });\n}\n\nexport default class SourcePublisher extends React.Component {\n  constructor(props) {\n    super(props);\n    const { layers } = this.props;\n    const pleaseWaits = {};\n    layers.map(layer => layer.name).forEach((name) => { pleaseWaits[name] = true; });\n    this.state = { pleaseWaits };\n  }\n\n  clearPleaseWait(event, layerName) {\n    this.setState((prevState) => {\n      // TODO: Do not mutate! https://github.com/hubmapconsortium/vitessce/issues/148\n      // eslint-disable-next-line no-param-reassign\n      prevState.pleaseWaits[layerName] = false;\n      const waitingOn = Object.entries(prevState.pleaseWaits)\n        .filter(entry => entry[1])\n        .map(entry => entry[0]);\n      console.warn(`cleared \"${layerName}\"; waiting on ${waitingOn.length}:`, waitingOn);\n      return prevState;\n    });\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillMount() {\n    this.clearPleaseWaitToken = PubSub.subscribe(\n      CLEAR_PLEASE_WAIT, this.clearPleaseWait.bind(this),\n    );\n  }\n\n  componentWillUnmount() {\n    PubSub.unsubscribe(this.clearPleaseWaitToken);\n  }\n\n  componentDidMount() {\n    const { layers } = this.props;\n    layers.forEach((layer) => {\n      loadLayer(layer);\n    });\n  }\n\n  render() {\n    const { pleaseWaits } = this.state;\n    const unloadedLayers = Object.entries(pleaseWaits).filter(\n      ([name, stillWaiting]) => stillWaiting, // eslint-disable-line no-unused-vars\n    ).map(\n      ([name, stillWaiting]) => name, // eslint-disable-line no-unused-vars\n    );\n\n    if (unloadedLayers.length) {\n      return (\n        <>\n          <div className=\"modal\">\n            <div className=\"modal-dialog\">\n              <div className=\"modal-content\">\n                <div className=\"modal-body\">\n                  <p>Please wait...</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"modal-backdrop show\" />\n        </>\n      );\n    }\n    return null;\n  }\n}\n","export { default as SourcePublisher } from './SourcePublisher';\n","import React from 'react';\nimport uuidv4 from 'uuid/v4';\n\nimport SpatialSubscriber from './SpatialSubscriber';\nimport CellTooltip2DSubscriber from '../cell-tooltip/CellTooltip2DSubscriber';\n\nexport default function HoverableSpatialSubscriber(props) {\n  // Create a UUID so that hover events\n  // know from which DeckGL element they were generated.\n  const uuid = uuidv4();\n  return (\n    <SpatialSubscriber {...props} uuid={uuid}>\n      <CellTooltip2DSubscriber {...props} uuid={uuid} mapping=\"xy\" />\n    </SpatialSubscriber>\n  );\n}\n","import React from 'react';\n\nexport default class LayersMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkbox = this.checkbox.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const { target } = event;\n    const { checked, name } = target;\n    // In the future?: target.type === 'checkbox' ? target.checked : target.value;\n\n    const { layerIsVisible, setLayerIsVisible } = this.props;\n    layerIsVisible[name] = checked;\n    setLayerIsVisible(layerIsVisible);\n  }\n\n  checkbox(name, value) {\n    return (\n      <div key={name}>\n        <input\n          type=\"checkbox\"\n          name={name}\n          onChange={this.handleInputChange}\n          checked={value}\n        />\n        &nbsp;{name}\n      </div>\n    );\n  }\n\n  render() {\n    const { layerIsVisible } = this.props;\n    const entries = Object.entries(layerIsVisible);\n    const checkboxes = entries.map(([name, value]) => this.checkbox(name, value));\n    return (\n      <div className=\"ml-auto card py-1 px-2 tool roll-up\">\n        <div>Layers ▼</div>\n        {checkboxes}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { ScatterplotLayer, PolygonLayer, COORDINATE_SYSTEM } from 'deck.gl';\nimport { VivViewerLayer } from '@hubmap/vitessce-image-viewer';\nimport { SelectablePolygonLayer } from '../../layers';\nimport { cellLayerDefaultProps, PALETTE, DEFAULT_COLOR } from '../utils';\nimport AbstractSelectableComponent from '../AbstractSelectableComponent';\nimport LayersMenu from './LayersMenu';\n\nexport function square(x, y, r) {\n  return [[x, y + r], [x + r, y], [x, y - r], [x - r, y]];\n}\n\n/**\n React component which expresses the spatial relationships between cells and molecules.\n */\nexport default class Spatial extends AbstractSelectableComponent {\n  constructor(props) {\n    super(props);\n    this.state.layerIsVisible = {\n      molecules: true,\n      cells: true,\n      neighborhoods: false,\n    };\n\n    // In Deck.gl, layers are considered light weight, and\n    // can be created and destroyed quickly, if the data they wrap is stable.\n    // https://deck.gl/#/documentation/developer-guide/using-layers?section=creating-layer-instances-is-cheap\n    this.moleculesData = [];\n    this.cellsData = [];\n    this.neighborhoodsData = [];\n    this.raster = [];\n    this.setLayerIsVisible = this.setLayerIsVisible.bind(this);\n    this.getInitialViewState = this.getInitialViewState.bind(this);\n  }\n\n  static defaultProps = {\n    clearPleaseWait: (layer) => { console.warn(`\"clearPleaseWait\" not provided; layer: ${layer}`); },\n    cellRadius: 10,\n  };\n\n  // These are called from superclass, so they need to belong to instance, I think.\n  // eslint-disable-next-line class-methods-use-this\n  getInitialViewState() {\n    return this.props.view;\n  }\n\n\n  // eslint-disable-next-line class-methods-use-this\n  getCellCoords(cell) {\n    return cell.xy;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getCellBaseLayerId() {\n    return 'base-polygon-layer';\n  }\n\n  renderCellLayer() {\n    const {\n      selectedCellIds = new Set(),\n      updateStatus = (message) => {\n        console.warn(`Spatial updateStatus: ${message}`);\n      },\n      updateCellsHover = (hoverInfo) => {\n        console.warn(`Spatial updateCellsHover: ${hoverInfo.cellId}`);\n      },\n      updateCellsSelection = (cellsSelection) => {\n        console.warn(`Spatial updateCellsSelection: ${cellsSelection}`);\n      },\n      uuid = null,\n    } = this.props;\n\n    const { tool } = this.state;\n    const { cellRadius } = this.props;\n\n    return new SelectablePolygonLayer({\n      id: 'polygon-layer',\n      isSelected: cellEntry => (\n        selectedCellIds.size\n          ? selectedCellIds.has(cellEntry[0])\n          : true // If nothing is selected, everything is selected.\n      ),\n      getPolygon(cellEntry) {\n        const cell = cellEntry[1];\n        return cell.poly.length ? cell.poly : square(cell.xy[0], cell.xy[1], cellRadius);\n      },\n      stroked: false,\n      getColor: cellEntry => (\n        (this.props.cellColors && this.props.cellColors[cellEntry[0]]) || DEFAULT_COLOR\n      ),\n      onClick: (info) => {\n        if (tool) {\n          // If using a tool, prevent individual cell selection.\n          // Let SelectionLayer handle the clicks instead.\n          return;\n        }\n        const cellId = info.object[0];\n        if (selectedCellIds.has(cellId)) {\n          selectedCellIds.delete(cellId);\n          updateCellsSelection(selectedCellIds);\n        } else {\n          selectedCellIds.add(cellId);\n          updateCellsSelection(selectedCellIds);\n        }\n      },\n      visible: this.state.layerIsVisible.cells,\n      ...cellLayerDefaultProps(this.cellsData, updateStatus, updateCellsHover, uuid),\n    });\n  }\n\n  renderMoleculesLayer() {\n    const {\n      updateStatus = (message) => {\n        console.warn(`Spatial updateStatus: ${message}`);\n      },\n    } = this.props;\n\n    const getColor = d => PALETTE[d[2] % PALETTE.length];\n    return new ScatterplotLayer({\n      id: 'scatter-plot',\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      data: this.moleculesData,\n      pickable: true,\n      autoHighlight: true,\n      getRadius: this.props.moleculeRadius,\n      radiusMaxPixels: 3,\n      getPosition: d => [d[0], d[1], 0],\n      getLineColor: getColor,\n      getFillColor: getColor,\n      onHover: (info) => {\n        if (info.object) { updateStatus(`Gene: ${info.object[3]}`); }\n      },\n      visible: this.state.layerIsVisible.molecules,\n    });\n  }\n\n  renderNeighborhoodsLayer() {\n    return new PolygonLayer({\n      id: 'neighborhoods-layer',\n      getPolygon(neighborhoodsEntry) {\n        const neighborhood = neighborhoodsEntry[1];\n        return neighborhood.poly;\n      },\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      data: this.neighborhoodsData,\n      pickable: true,\n      autoHighlight: true,\n      stroked: true,\n      filled: false,\n      getElevation: 0,\n      getLineWidth: 10,\n      visible: this.state.layerIsVisible.neighborhoods,\n    });\n  }\n\n  createRasterLayer() {\n    const {\n      colorValues, sliderValues, channelVisibilities, raster,\n    } = this.props;\n    if (colorValues && sliderValues && channelVisibilities && raster) {\n      const { loader } = raster;\n      return new VivViewerLayer({\n        loader,\n        colorValues,\n        sliderValues,\n        channelIsOn: channelVisibilities,\n        onTileError: (err) => {\n          throw err;\n        },\n      });\n    }\n    return null;\n  }\n\n  setLayerIsVisible(layers) {\n    this.setState({ layers });\n  }\n\n  renderLayersMenu() { // eslint-disable-line class-methods-use-this\n    return (\n      <LayersMenu\n        layerIsVisible={this.state.layerIsVisible}\n        setLayerIsVisible={this.setLayerIsVisible}\n      />\n    );\n  }\n\n  renderLayers() {\n    const {\n      molecules,\n      cells,\n      neighborhoods,\n      clearPleaseWait,\n      raster,\n    } = this.props;\n    // Process molecules data and cache into re-usable array.\n    if (molecules && this.moleculesData.length === 0) {\n      Object.entries(molecules).forEach(([molecule, coords], index) => {\n        this.moleculesData = this.moleculesData.concat(\n          coords.map(([x, y]) => [x, y, index, molecule]), // eslint-disable-line no-loop-func\n          // Because we use the inner function immediately,\n          // the eslint warning about closures is a red herring:\n          // The index and molecule values are correct.\n        );\n      });\n    }\n    // Process cells data and cache into re-usable array.\n    if (cells && this.cellsData.length === 0) {\n      this.cellsData = Object.entries(cells);\n    }\n    // Process neighborhoods data and cache into re-usable array.\n    if (neighborhoods && this.neighborhoodsData.length === 0) {\n      this.neighborhoodsData = Object.entries(neighborhoods);\n    }\n    if (raster && this.raster.length === 0) {\n      this.raster = raster;\n    }\n    // Append each layer to the list.\n    const layerList = [];\n\n    if (raster && clearPleaseWait) clearPleaseWait('raster');\n    layerList.push(this.createRasterLayer());\n\n    if (cells && clearPleaseWait) clearPleaseWait('cells');\n    layerList.push(this.renderCellLayer());\n\n    if (neighborhoods && clearPleaseWait) clearPleaseWait('neighborhoods');\n    layerList.push(this.renderNeighborhoodsLayer());\n\n    if (molecules && clearPleaseWait) clearPleaseWait('molecules');\n    layerList.push(this.renderMoleculesLayer());\n\n    return layerList;\n  }\n}\n","import React from 'react';\nimport PubSub from 'pubsub-js';\nimport shortNumber from 'short-number';\n\nimport TitleInfo from '../TitleInfo';\nimport {\n  MOLECULES_ADD,\n  NEIGHBORHOODS_ADD,\n  CELLS_ADD,\n  CELLS_COLOR,\n  STATUS_INFO,\n  CELLS_SELECTION,\n  CELLS_HOVER,\n  CLEAR_PLEASE_WAIT,\n  VIEW_INFO,\n  CELL_SETS_VIEW,\n  RASTER_ADD,\n  SLIDERS_CHANGE,\n  COLORS_CHANGE,\n  CHANNEL_VISIBILITY_CHANGE,\n} from '../../events';\nimport Spatial from './Spatial';\n\nexport default class SpatialSubscriber extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cells: {},\n      selectedCellIds: new Set(),\n      cellColors: null,\n      colorValues: null,\n      sliderValues: null,\n      channelVisibilities: null,\n      raster: null,\n    };\n    this.componentWillUnmount = this.componentWillUnmount.bind(this);\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillMount() {\n    this.moleculesAddToken = PubSub.subscribe(\n      MOLECULES_ADD, this.moleculesAddSubscriber.bind(this),\n    );\n    this.neighborhoodsAddToken = PubSub.subscribe(\n      NEIGHBORHOODS_ADD, this.neighborhoodsAddSubscriber.bind(this),\n    );\n    this.cellsAddToken = PubSub.subscribe(\n      CELLS_ADD, this.cellsAddSubscriber.bind(this),\n    );\n    this.cellsSelectionToken = PubSub.subscribe(\n      CELLS_SELECTION, this.cellsSelectionSubscriber.bind(this),\n    );\n    this.cellSetsViewToken = PubSub.subscribe(\n      CELL_SETS_VIEW, this.cellsSelectionSubscriber.bind(this),\n    );\n    this.cellsColorToken = PubSub.subscribe(\n      CELLS_COLOR, this.cellsColorSubscriber.bind(this),\n    );\n    this.rasterAddToken = PubSub.subscribe(\n      RASTER_ADD, this.rasterAddSubscriber.bind(this),\n    );\n  }\n\n  componentDidMount() {\n    const { onReady } = this.props;\n    onReady();\n  }\n\n  componentWillUnmount() {\n    PubSub.unsubscribe(this.moleculesAddToken);\n    PubSub.unsubscribe(this.neighborhoodsAddToken);\n    PubSub.unsubscribe(this.cellsAddToken);\n    PubSub.unsubscribe(this.cellsSelectionToken);\n    PubSub.unsubscribe(this.cellsColorToken);\n    PubSub.unsubscribe(this.cellSetsViewToken);\n    PubSub.unsubscribe(this.rasterAddToken);\n    PubSub.unsubscribe(this.slidersChangeToken);\n    PubSub.unsubscribe(this.colorsChangeToken);\n    PubSub.unsubscribe(this.channelVisibilityChangeToken);\n  }\n\n  cellsSelectionSubscriber(msg, cellIds) {\n    this.setState({ selectedCellIds: cellIds });\n  }\n\n  rasterAddSubscriber(msg, raster) {\n    this.setState({ raster });\n    const { id } = raster;\n    this.slidersChangeToken = PubSub.subscribe(\n      SLIDERS_CHANGE(id),\n      this.onSlidersChange.bind(this),\n    );\n    this.colorsChangeToken = PubSub.subscribe(\n      COLORS_CHANGE(id),\n      this.onColorsChange.bind(this),\n    );\n    this.channelVisibilityChangeToken = PubSub.subscribe(\n      CHANNEL_VISIBILITY_CHANGE(id),\n      this.onChannelVisibilityChange.bind(this),\n    );\n  }\n\n  moleculesAddSubscriber(msg, molecules) {\n    this.setState({ molecules });\n  }\n\n  neighborhoodsAddSubscriber(msg, neighborhoods) {\n    this.setState({ neighborhoods });\n  }\n\n  cellsAddSubscriber(msg, cells) {\n    this.setState({ cells });\n  }\n\n  cellsColorSubscriber(msg, cellColors) {\n    this.setState({ cellColors });\n  }\n\n  onSlidersChange(msg, sliderValues) {\n    this.setState({ sliderValues });\n  }\n\n  onColorsChange(msg, colorValues) {\n    this.setState({ colorValues });\n  }\n\n  onChannelVisibilityChange(msg, channelVisibilities) {\n    this.setState({ channelVisibilities });\n  }\n\n  render() {\n    const { cells, molecules } = this.state;\n    const { uuid = null, children, removeGridComponent } = this.props;\n    const cellsCount = cells ? Object.keys(cells).length : 0;\n    const moleculesCount = molecules ? Object.keys(molecules).length : 0;\n    const locationsCount = molecules\n      ? Object.values(molecules).map(l => l.length).reduce((a, b) => a + b, 0) : 0;\n    return (\n      /* eslint-disable react/destructuring-assignment */\n      <TitleInfo\n        title=\"Spatial\"\n        info={`${cellsCount} cells, ${moleculesCount} molecules\n              at ${shortNumber(locationsCount)} locations`}\n        removeGridComponent={removeGridComponent}\n      >\n        {children}\n        <Spatial\n          {... this.state}\n          view={this.props.view}\n          moleculeRadius={this.props.moleculeRadius}\n          cellRadius={this.props.cellRadius}\n          uuid={uuid}\n          updateStatus={\n            message => PubSub.publish(STATUS_INFO, message)\n          }\n          updateCellsSelection={\n            selectedCellIds => PubSub.publish(CELLS_SELECTION, selectedCellIds)\n          }\n          updateCellsHover={\n            hoverInfo => PubSub.publish(CELLS_HOVER, hoverInfo)\n          }\n          updateViewInfo={\n            viewInfo => PubSub.publish(VIEW_INFO, viewInfo)\n          }\n          clearPleaseWait={\n            layerName => PubSub.publish(CLEAR_PLEASE_WAIT, layerName)\n          }\n        />\n      </TitleInfo>\n      /* eslint-enable */\n    );\n  }\n}\n\nSpatialSubscriber.defaultProps = {\n  cellRadius: 50,\n  moleculeRadius: 10,\n};\n","import React from 'react';\nimport TitleInfo from '../TitleInfo';\n\nexport default function Status(props) {\n  const warnClass = 'alert alert-warning my-0 details';\n  const { info, warn, removeGridComponent } = props;\n  const messages = [];\n  if (info) {\n    messages.push(<p className=\"details\" key=\"info\">{info}</p>);\n  }\n  if (warn) {\n    console.warn(warn);\n    messages.push(<p className={warnClass} key=\"warn\">{warn}</p>);\n  }\n  return (\n    <TitleInfo title=\"Status\" removeGridComponent={removeGridComponent} isScroll>\n      {messages}\n    </TitleInfo>\n  );\n}\n","import React from 'react';\nimport PubSub from 'pubsub-js';\nimport Status from './Status';\n\nimport { STATUS_WARN, STATUS_INFO } from '../../events';\n\nexport default class StatusSubscriber extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { warn: null, info: null };\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillMount() {\n    this.warnToken = PubSub.subscribe(STATUS_WARN, this.warnSubscriber.bind(this));\n    this.infoToken = PubSub.subscribe(STATUS_INFO, this.infoSubscriber.bind(this));\n  }\n\n  componentDidMount() {\n    const { onReady } = this.props;\n    onReady();\n  }\n\n  componentWillUnmount() {\n    PubSub.unsubscribe(this.warnToken);\n    PubSub.unsubscribe(this.infoToken);\n  }\n\n  warnSubscriber(msg, data) {\n    this.setState(prevState => ({ warn: data, info: prevState.info }));\n  }\n\n  infoSubscriber(msg, data) {\n    this.setState(prevState => ({ info: data, warn: prevState.warn }));\n  }\n\n  render() {\n    const { warn, info } = this.state;\n    const { removeGridComponent } = this.props;\n    return (\n      <Status warn={warn} info={info} removeGridComponent={removeGridComponent} />\n    );\n  }\n}\n","import { COORDINATE_SYSTEM } from 'deck.gl';\nimport { interpolatePlasma } from 'd3-scale-chromatic';\n\nexport function makeCellStatusMessage(cellInfoFactors) {\n  return Object.entries(cellInfoFactors).map(\n    ([factor, value]) => `${factor}: ${value}`,\n  ).join('; ');\n}\n\nexport function cellLayerDefaultProps(cells, updateStatus, updateCellsHover, uuid) {\n  return {\n    coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n    data: cells,\n    pickable: true,\n    autoHighlight: true,\n    stroked: true,\n    filled: true,\n    getElevation: 0,\n    getLineWidth: 0,\n    onHover: (info) => {\n      if (info.object) {\n        const [cellId, cellInfo] = info.object;\n        const { factors = {}, xy, mappings = {} } = cellInfo;\n        updateStatus(makeCellStatusMessage(factors));\n        updateCellsHover({\n          cellId,\n          mappings: { xy, ...mappings },\n          uuid,\n          factors,\n        });\n      } else {\n        // Clear the currently-hovered cell info by passing null.\n        updateCellsHover(null);\n      }\n    },\n  };\n}\n\nexport const DEFAULT_COLOR = [128, 128, 128];\n\n// From http://colorbrewer2.org/?type=qualitative&scheme=Paired&n=12#type=qualitative&scheme=Paired&n=12\nexport const PALETTE = [\n  [166, 206, 227],\n  [31, 120, 180],\n  [178, 223, 138],\n  [51, 160, 44],\n  [251, 154, 153],\n  [227, 26, 28],\n  [253, 191, 111],\n  [255, 127, 0],\n  [202, 178, 214],\n  [106, 61, 154],\n  [255, 255, 153],\n  [177, 89, 40],\n];\n\n\nexport function rgb(hexString) {\n  return [\n    parseInt(hexString.slice(1, 3), 16),\n    parseInt(hexString.slice(3, 5), 16),\n    parseInt(hexString.slice(5, 7), 16),\n  ];\n}\n\nexport function interpolateColors(zeroToOne) {\n  // The lowest 25% does not have good contrast.\n  return rgb((interpolatePlasma(zeroToOne / 0.75 + 0.25)));\n}\n\n// Adapted from https://github.com/feross/fromentries/blob/29b52a850bb3a47c390937631c2638edf3443942/index.js\nexport function fromEntries(iterable) {\n  return [...iterable]\n    .reduce((obj, { 0: key, 1: val }) => Object.assign(obj, { [key]: val }), {});\n}\n","\nvar content = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-5-1!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-2!../../node_modules/postcss-loader/src/index.js??postcss!../../node_modules/resolve-url-loader/index.js??ref--6-oneOf-5-4!../../node_modules/sass-loader/dist/cjs.js??ref--6-oneOf-5-5!./index.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-5-1!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-2!../../node_modules/postcss-loader/src/index.js??postcss!../../node_modules/resolve-url-loader/index.js??ref--6-oneOf-5-4!../../node_modules/sass-loader/dist/cjs.js??ref--6-oneOf-5-5!./index.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-5-1!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-2!../../node_modules/postcss-loader/src/index.js??postcss!../../node_modules/resolve-url-loader/index.js??ref--6-oneOf-5-4!../../node_modules/sass-loader/dist/cjs.js??ref--6-oneOf-5-5!./index.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import 'whatwg-fetch';\nimport { renderApp } from '../app/app';\n\nconst urlParams = new URLSearchParams(window.location.search);\nif (urlParams.has('small')) {\n  renderApp('small-app', 100);\n} else {\n  renderApp('full-app');\n}\n","const ADD = '.add';\n\nexport const CLEAR_PLEASE_WAIT = 'clear_please_wait';\n\nexport const VIEW_INFO = 'view.info';\n\nexport const CELLS = 'cells';\nexport const CELLS_ADD = CELLS + ADD;\n// Selection by the user via rectangle or polygon tool.\nexport const CELLS_SELECTION = `${CELLS}.selection`;\nexport const CELLS_COLOR = `${CELLS}.color`;\nexport const CELLS_HOVER = `${CELLS}.hover`;\n\n// Modifications to the cell set tree structure.\nexport const CELL_SETS_MODIFY = `${CELLS}.sets.modify`;\n// Viewing a previously-defined set or group of sets.\nexport const CELL_SETS_VIEW = `${CELLS}.sets.view`;\n\nexport const CLUSTERS = 'clusters';\nexport const CLUSTERS_ADD = CLUSTERS + ADD;\n\nexport const FACTORS = 'factors';\nexport const FACTORS_ADD = FACTORS + ADD;\n\nexport const GENES = 'genes';\nexport const GENES_ADD = GENES + ADD;\n\nexport const MOLECULES = 'molecules';\nexport const MOLECULES_ADD = MOLECULES + ADD;\n\nexport const NEIGHBORHOODS = 'neighborhoods';\nexport const NEIGHBORHOODS_ADD = NEIGHBORHOODS + ADD;\n\nexport const STATUS = 'status';\nexport const STATUS_WARN = `${STATUS}.warn`;\nexport const STATUS_INFO = `${STATUS}.info`;\n\nexport const RASTER = 'raster';\nexport const RASTER_ADD = RASTER + ADD;\n\nexport const SLIDERS = 'sliders';\nexport const SLIDERS_CHANGE = id => `${SLIDERS}.change.${id}`;\n\nexport const COLORS = 'colors';\nexport const COLORS_CHANGE = id => `${COLORS}.change.${id}`;\n\nexport const CHANNEL_VISIBILITY = 'channel_visibility';\nexport const CHANNEL_VISIBILITY_CHANGE = id => `${CHANNEL_VISIBILITY}.change.${id}`;\n","import { CompositeLayer, PolygonLayer } from 'deck.gl';\n\nimport { overlayBaseProps } from './utils';\n\nexport class SelectablePolygonLayer extends CompositeLayer {\n  renderLayers() {\n    const props = overlayBaseProps(this.props);\n    const base = new PolygonLayer(props.base);\n    const overlay = new PolygonLayer(props.overlay);\n    return [base, overlay];\n  }\n}\n\nSelectablePolygonLayer.layerName = 'SelectablePolygonLayer';\n","import { CompositeLayer, ScatterplotLayer } from 'deck.gl';\n\nimport { overlayBaseProps } from './utils';\n\nexport class SelectableScatterplotLayer extends CompositeLayer {\n  renderLayers() {\n    const props = overlayBaseProps(this.props);\n    const base = new ScatterplotLayer(props.base);\n    const overlay = new ScatterplotLayer(props.overlay);\n    return [base, overlay];\n  }\n}\n\nSelectableScatterplotLayer.layerName = 'SelectableScatterplotLayer';\n","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable no-underscore-dangle */\n// File adopted from nebula.gl's SelectionLayer\n// https://github.com/uber/nebula.gl/blob/8e9c2ec8d7cf4ca7050909ed826eb847d5e2cd9c/modules/layers/src/layers/selection-layer.js\nimport { CompositeLayer } from 'deck.gl';\nimport { polygon as turfPolygon, point as turfPoint } from '@turf/helpers';\nimport booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport { EditableGeoJsonLayer, SELECTION_TYPE } from 'nebula.gl';\nimport { DrawRectangleMode, DrawPolygonByDraggingMode, ViewMode } from '@nebula.gl/edit-modes';\n\nconst MODE_MAP = {\n  [SELECTION_TYPE.RECTANGLE]: DrawRectangleMode,\n  [SELECTION_TYPE.POLYGON]: DrawPolygonByDraggingMode,\n};\n\nconst defaultProps = {\n  selectionType: SELECTION_TYPE.RECTANGLE,\n  layerIds: [],\n  onSelect: () => {},\n};\n\nconst EMPTY_DATA = {\n  type: 'FeatureCollection',\n  features: [],\n};\n\nconst LAYER_ID_GEOJSON = 'selection-geojson';\n\nconst PASS_THROUGH_PROPS = [\n  'lineWidthScale',\n  'lineWidthMinPixels',\n  'lineWidthMaxPixels',\n  'lineWidthUnits',\n  'lineJointRounded',\n  'lineMiterLimit',\n  'pointRadiusScale',\n  'pointRadiusMinPixels',\n  'pointRadiusMaxPixels',\n  'lineDashJustified',\n  'getLineColor',\n  'getFillColor',\n  'getRadius',\n  'getLineWidth',\n  'getLineDashArray',\n  'getTentativeLineDashArray',\n  'getTentativeLineColor',\n  'getTentativeFillColor',\n  'getTentativeLineWidth',\n  'editHandlePointRadiusScale',\n  'editHandlePointRadiusMinPixels',\n  'editHandlePointRadiusMaxPixels',\n  'getEditHandlePointColor',\n  'getEditHandlePointRadius',\n  'modeHandlers',\n];\n\nexport default class SelectionLayer extends CompositeLayer {\n  _selectRectangleObjects(coordinates) {\n    const { layerIds, onSelect } = this.props;\n\n    const [x1, y1] = this.context.viewport.project(coordinates[0][0]);\n    const [x2, y2] = this.context.viewport.project(coordinates[0][2]);\n\n    const pickingInfos = this.context.deck.pickObjects({\n      x: Math.min(x1, x2),\n      y: Math.min(y1, y2),\n      width: Math.abs(x2 - x1),\n      height: Math.abs(y2 - y1),\n      layerIds,\n    });\n\n    onSelect({ pickingInfos });\n  }\n\n  _selectPolygonObjects(coordinates) {\n    const { layerIds, onSelect, getCellCoords } = this.props;\n    const mousePoints = coordinates[0].map(c => this.context.viewport.project(c));\n\n    const allX = mousePoints.map(mousePoint => mousePoint[0]);\n    const allY = mousePoints.map(mousePoint => mousePoint[1]);\n    const x = Math.min(...allX);\n    const y = Math.min(...allY);\n    const maxX = Math.max(...allX);\n    const maxY = Math.max(...allY);\n    const rect = {\n      x,\n      y,\n      width: maxX - x,\n      height: maxY - y,\n    };\n    const polygon = turfPolygon(coordinates);\n    const pickingInfos = this.context.deck.pickObjects({\n      ...rect,\n      layerIds,\n    }).filter(info => booleanPointInPolygon(turfPoint(getCellCoords(info.object[1])), polygon));\n\n    onSelect({ pickingInfos });\n  }\n\n  renderLayers() {\n    const mode = MODE_MAP[this.props.selectionType] || ViewMode;\n\n    const inheritedProps = {};\n    PASS_THROUGH_PROPS.forEach((p) => {\n      if (this.props[p] !== undefined) inheritedProps[p] = this.props[p];\n    });\n    const layers = [\n      new EditableGeoJsonLayer(\n        this.getSubLayerProps({\n          id: LAYER_ID_GEOJSON,\n          pickable: true,\n          mode,\n          selectedFeatureIndexes: [],\n          data: EMPTY_DATA,\n          onEdit: ({ updatedData, editType }) => {\n            if (editType === 'addFeature') {\n              const { coordinates } = updatedData.features[0].geometry;\n\n              if (this.props.selectionType === SELECTION_TYPE.RECTANGLE) {\n                this._selectRectangleObjects(coordinates);\n              } else if (this.props.selectionType === SELECTION_TYPE.POLYGON) {\n                this._selectPolygonObjects(coordinates);\n              }\n            }\n          },\n          ...inheritedProps,\n        }),\n      ),\n    ];\n\n    return layers;\n  }\n}\n\nSelectionLayer.layerName = 'SelectionLayer';\nSelectionLayer.defaultProps = defaultProps;\n","export { SelectablePolygonLayer } from './SelectablePolygonLayer';\nexport { SelectableScatterplotLayer } from './SelectableScatterplotLayer';\n","function fade(x) {\n  return x / 3;\n}\n\nfunction fadeFunction(colorFunction) {\n  return (cell) => {\n    const rgb = colorFunction(cell);\n    return [fade(rgb[0]), fade(rgb[1]), fade(rgb[2])];\n  };\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport function overlayBaseProps(props) {\n  const {\n    id, getColor, data, isSelected, ...rest\n  } = props;\n  return {\n    overlay: {\n      id: `selected-${id}`,\n      getFillColor: getColor,\n      getLineColor: getColor,\n      data: data.filter(isSelected),\n      ...rest,\n    },\n    base: {\n      id: `base-${id}`,\n      getLineColor: fadeFunction(getColor),\n      getFillColor: fadeFunction(getColor),\n      // Alternatively: contrast outlines with solids:\n      // getLineColor: getColor,\n      // getFillColor: [255,255,255],\n      data: data.slice(),\n      ...rest,\n    },\n  };\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/EA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnRA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAHA;AAIA;AACA;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AAtBA;AACA;;;;;;;;;;;;;;;;;;;;;ACNA;AAEA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAkjHA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAA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;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAEA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7JA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAEA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAbA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAEA;AACA;AACA;AAEA;;;;;AAIA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AA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;AAAA;AAJA;AAAA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;AC7CA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAJA;AAAA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAJA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AAEA;AACA;AAIA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAGA;AALA;AAMA;AACA;AACA;;;AACA;AACA;AAGA;AAGA;AAGA;AAGA;AAGA;;;AAEA;AAAA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA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MA;AACA;AAAA;AAAA;AACA;AAEA;;;;;;AAIA;AACA;AACA;AACA;AAEA;;;;;;;AAKA;AAAA;AAIA;AACA;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;;;;;;AAKA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;;;;;;;AAMA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;;;;;;AAKA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjNA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;AAMA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AAEA;;;;;;;;;AAOA;AACA;AAAA;AAAA;AACA;AAEA;;;;;AAGA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAAA;AAAA;AAuBA;AACA;AAxBA;AAAA;AAAA;AA2BA;AACA;AA5BA;AAAA;AAAA;AA+BA;AACA;AAhCA;AAAA;AAAA;AAmCA;AACA;AApCA;AAAA;AAAA;AAuCA;AACA;AAxCA;AAAA;AAAA;AA2CA;AACA;AAEA;;;;;AA9CA;AAAA;AAAA;AAmDA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;AA5DA;AAAA;AAAA;AAkEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;AA3EA;AAAA;AAAA;AAiFA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;AA1FA;AAAA;AAAA;AA+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;;;;;;AA3GA;AAAA;AAAA;AAiHA;AACA;AAEA;;;;;;AApHA;AAAA;AAAA;AA0HA;AACA;AAEA;;;;;;AA7HA;AAAA;AAAA;AAmIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;AAzIA;AAAA;AAAA;AAgJA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;AAzJA;AAAA;AAAA;AA6JA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAvKA;AACA;AADA;AAAA;AA0KA;;;;;AAIA;AACA;;;;;;;AAOA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AAIA;AACA;AACA;AAEA;;;;;;;;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;;AAKA;AACA;AACA;AAAA;AAAA;AACA;AAEA;;;;;;;AAIA;AACA;AACA;AACA;AAEA;;;;;;;AAIA;AACA;AACA;AACA;AAEA;;;;;;;;;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AAIA;AACA;AACA;AAEA;;;;;;;;AAKA;AACA;AACA;AAEA;;;;;;;;AAKA;AACA;AACA;AAEA;;;;;;;;;;;;;;AAWA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AAKA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AAKA;AACA;AACA;AACA;AAEA;;;;;;;;;;AAOA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;;;;;;;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;AAIA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAGA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACznBA;AAAA;AAAA;AAAA;AAAA;;;;;;AAMA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAKA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAWA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AACA;AAfA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAoBA;AAAA;AAAA;AACA;AArBA;AAoBA;AApBA;AAqBA;AArBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAsBA;AACA;AAxBA;AAAA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AALA;AACA;AA1BA;AAyBA;AAzBA;AAoCA;AApCA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAyCA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAMA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAGA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAAA;AAHA;AACA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;;;;AAjEA;AACA;;;;;;;;;;;;;ACxIA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AAJA;AAKA;AACA;;;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAMA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;AAEA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA1CA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAiBA;AACA;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AALA;AAAA;AAOA;AACA;AARA;AAAA;AAUA;AACA;AAXA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAiCA;;;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAdA;AAgBA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAC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CA;AACA;AACA;AACA;AAxBA;AA0BA;AAEA;AACA;AAEA;AAgBA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AAEA;AAEA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AANA;AACA;AADA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AAEA;AAEA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AANA;AACA;AADA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AA2BA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAEA;AAFA;AAGA;AAAA;AAEA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAsBA;AACA;;;;AA3EA;AACA;AADA;AA8EA;AACA;;;;;;;;;;;;ACvIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AARA;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}