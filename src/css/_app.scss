@import 'colors';

@mixin app($theme-name, $theme-colors) {

    &.welcome-container {
        overflow: visible;
        .react-grid-layout, .warning-layout {
            position: relative;
        }
    }

    .react-grid-layout, .warning-layout {
        background-color: map-get($theme-colors, "grid-layout-background");
        height: auto;
        position: absolute;
        width: 100%;
    }

    .warning-layout {
        height: 100vh;
        .card {
            margin-left: 0.5rem;
        }
    }

    /* Reference: https://projects.lukehaas.me/css-loaders/ */
    .please-wait-spinner,
    .please-wait-spinner:after {
        border-radius: 50%;
        width: 100px;
        height: 100px;
    }
    .please-wait-spinner {
        margin-left: auto;
        margin-right: auto;
        font-size: 10px;
        position: relative;
        border-top: 1.1em solid rgba(255, 255, 255, 0.2);
        border-right: 1.1em solid rgba(255, 255, 255, 0.2);
        border-bottom: 1.1em solid rgba(255, 255, 255, 0.2);
        border-left: 1.1em solid #ffffff;
        transform: translateZ(0);
        animation: load8 1.1s infinite linear;
    }
    @keyframes load8 {
        from {
            transform: rotate(0deg);
        }
        to {
            transform: rotate(360deg);
        }
    }


    /* Flex grid items */
    .react-grid-item {
        /* emulate bootstrap .flex-column: */
        -webkit-box-orient: vertical!important;
        -webkit-box-direction: normal!important;
        -ms-flex-direction: column!important;
        flex-direction: column!important;

        /* emulate bootstrap .d-flex: */
        display: -webkit-box!important;
        display: -ms-flexbox!important;
        display: flex!important;

        /* So the resize handle position looks correct: */
        padding-right: 10px;
    }

    /* Fix grid title rendering on Safari 12.0.
        Inspired by https://stackoverflow.com/questions/32689686/overlapping-css-flexbox-items-in-safari */
    .d-flex {
        flex-shrink: 0;
    }

    /* Styling for closing button on the grid items */
    .close-pane-button {
        border: none;
        font-family: Ampersand;
        margin-left: .5em;
        background: none;
        color: map-get($theme-colors, "primary-foreground-dim");
    }

    /* Tool styles */
    .title {
        color: map-get($theme-colors, "primary-foreground");
        overflow-x: hidden;
    }

    .card {
        border: 1px solid map-get($theme-colors, "card-border");
    }

    .bg-black {
        background-color: map-get($global-colors, "black");
        color: map-get($global-colors, "white");
        a {
            color: map-get($global-colors, "white");
        }
    }

    .bg-primary {
        background-color: map-get($theme-colors, "primary-background");
        color: map-get($theme-colors, "primary-foreground");
        a {
            color: map-get($theme-colors, "primary-foreground-active");
        }
    }

    .bg-secondary {
        background-color: map-get($theme-colors, "secondary-background");
        color: map-get($theme-colors, "secondary-foreground");
    }

    .scroll {
        overflow-y: auto;
    }

    .details {
        font-size: 80%;
        opacity: 0.8;
    }

    .description {
        p, details, table {
            font-size: 80%;
            opacity: 0.8;
        }
        details {
            margin-bottom: 6px;
        }
        summary {
            border-bottom: 1px solid lighten(map-get($theme-colors, "primary-background"), 10%);
            cursor: pointer;
        }
        .metadata-container {
            padding-left: 14px;
            table {
                width: 100%;
                td, th {
                    outline: none;
                    padding: 2px 2px;
                    max-width: 0;
                    overflow: hidden;
                    text-overflow: ellipsis;
                    white-space: nowrap;
                    width: 50%;
                }
                tr:nth-child(even) {
                    background-color: lighten(map-get($theme-colors, "primary-background"), 5%);
                }
            }
        }
    }

    .coll-full, .welcome-col-left, .welcome-col-right {
        position: relative;
        width: 100%;
        padding-right: 15px;
        padding-left: 15px;
    }

    .col-full {
        -ms-flex: 0 0 100%;
        flex: 0 0 100%;
        max-width: 100%;
    }

    .welcome-col-left {
        -ms-flex: 0 0 50%;
        flex: 0 0 50%;
        max-width: 50%;

        .list-group-item {
            background-color: map-get($theme-colors, "primary-background-highlight");
        }

        .input-group input {
            background-color: map-get($theme-colors, "primary-background-input");
        }
        a {
            color: #ffffff;
        }
    }
  

    .welcome-col-right {
        -ms-flex: 0 0 50%;
        flex: 0 0 50%;
        max-width: 50%;
        .info-paragraph {
            margin-bottom: 0 !important;
        }
        .info-section-text {
            margin-top: 0.5rem
        }
    }
  
}

.react-draggable-transparent-selection .react-grid-item {
  /* These styles prevent text selection during resize drag interactions.
     The react-draggable-transparent-selection class is added to the body 
     element during resizing and removed after resizing has finished.
     Not part of mixin because acts outside of .vitessce-container. */
  -webkit-user-select: none !important;
  -khtml-user-select: none !important;
  -moz-user-select: none !important;
  -o-user-select: none !important;
  user-select: none !important;
}


body {
    margin: 0;
    text-align: left;
}

.container-fluid {
    width: 100%;
    padding-right: 15px;
    padding-left: 15px;
    margin-right: auto;
    margin-left: auto;
    box-sizing: border-box;
}